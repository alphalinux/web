%!PS-Adobe-3.0

%%Creator: Windows PSCRIPT

%%Title: Microsoft Word - IPROBE.DOC

%%BoundingBox: 6 6 606 786

%%DocumentNeededResources: (atend)

%%DocumentSuppliedResources: (atend)

%%Pages: (atend)

%%BeginResource: procset Win35Dict 3 1

/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72

mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr

/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld

/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix

ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc

/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false

def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq

and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd

/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{

/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM

matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE

matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix

dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{

/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave

showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string

def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch

putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed

/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch

0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP

cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90

rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg

add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes

div dup scale 0 0 transform .25 add round .25 sub exch .25 add round

.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false

def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[

16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve

16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut

16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave

16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85

/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand

16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright

16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97

/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright

16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency

16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright

16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen

16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior

16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered

16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright

16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown

16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis

16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA

/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex

16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4

/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash

16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute

16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex

16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8

/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave

16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde

16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis

16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex

16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict

12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup

IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0

/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar

IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname

ed/basefontname ed FontDirectory newfontname known not{/basefontdict

basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch

dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll

put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont

/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet

put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree

MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC

/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed

/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1

mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch

y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra

ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra

dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break

add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0

y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL

sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed

0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0

div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc

esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform

/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE

rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE

mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition

known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get

1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform

/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness

known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get

1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy

lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat

1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin

/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]

def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16

setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{

/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup

2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index

put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont

definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch

show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w

Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup

rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w

X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup

neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox

AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round

def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if

dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft

ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536

and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm

15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes

12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div

PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if

iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen

3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0

setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd

/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy

div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm

pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy

M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0

ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1

r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r

arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2

copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2

y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div

def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div

y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat

x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat

m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed

/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if

sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd

/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt

dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def

/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def

/typecheck(operator was expecting a different type of operand)def

/ioerror(input/output error occured)def end{end}if errordict begin

/handleerror{$error begin newerror{/newerror false def showpage 72

72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont

x y moveto(Offending Command = )show/command load{dup type/stringtype

ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show

errorname{dup type dup( max err string )cvs show( : )show/stringtype

ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname

known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end

/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1

add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall

showpage}if end}def end}bd end

%%EndResource

/SVDoc save def

%%EndProlog

%%BeginSetup

Win35Dict begin

ErrHandler

statusdict begin 0 setjobtimeout end

statusdict begin statusdict /jobname (Microsoft Word - IPROBE.DOC) put end

/oldDictCnt countdictstack def {statusdict /setpapertray known {statusdict begin 3 setpapertray end} if

}stopped 

{ countdictstack oldDictCnt lt { Win35Dict begin } 

{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 

/oldDictCnt countdictstack def {}stopped 

{ countdictstack oldDictCnt lt { Win35Dict begin } 

{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 

statusdict /settumble known {statusdict begin false settumble end} if
statusdict /setduplexmode known {statusdict begin true setduplexmode end} if

[{ }

/exec load currenttransfer /exec load] cvx settransfer

%%EndSetup

%%Page: 1 1

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 203 836 (Digital Equipment Corporation) 836 SB

32 0 0 58 58 0 0 0 53 /Helvetica-BoldOblique /font10 ANSIFont font

276 272 702 (Internal Use Only\226DRAFT) 702 SB

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

1206 1170 1020 (Guide to IPROBE) 1020 SB

255 255 255 fC

/fm 256 def

1961 3 270 1162 B

1 F

n

0 0 0 fC

/fm 256 def

1961 11 270 1138 B

1 F

n

/fm 256 def

1961 11 270 1150 B

1 F

n

32 0 0 67 67 0 0 0 62 /Helvetica-Bold /font9 ANSIFont font

1588 1366 638 (Installing and Using) 638 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

1541 1846 685 (CSG Performance Group) 685 SB

1884 2115 342 (Tools Group) 342 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1929 2196 297 (December 1994) 297 SB

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Helvetica-BoldOblique

%%Page: 2 2

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 202 459 (First Printing, December 1994) 459 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

276 291 1935 (The information in this document is subject to change without notice and should not be construed as a commitment by Digital Equipment) 1935 SB

276 330 1899 (Corporation. Digital Equipment Corporation assumes no responsibility for any errors that may appear in this document nor does Digital) 1899 SB

276 369 1831 (assume responsibility for the use or reliability of software or equipment that is not supplied by Digital Equipment Corporation or its) 1831 SB

276 408 292 (affiliated companies.) 292 SB

276 486 1945 (Digital Equipment Corporation conducts its business in a manner that conserves the environment and protects the safety and health of its) 1945 SB

276 525 617 (employees, customers, and the community.) 617 SB

276 603 1928 (Restricted Rights: Use, duplication, or disclosure by the U.S. Government is subject to restrictions as set forth in subparagraph \(c\)\(1\)\(ii\)) 1928 SB

276 642 1261 (of the Rights in Technical Data and Computer Software clause at DFARS 252.227 7013.) 1261 SB

276 721 146 (Copyright ) 146 SB

32 0 0 33 33 0 0 0 33 /Symbol font

gs 448 3249 0 0 CB

422 719 26 (\323) 26 SB

gr

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

448 721 526 ( 1994 Digital Equipment Corporation.) 526 SB

276 763 673 (Patent Pending, Digital Equipment Corporation.) 673 SB

276 802 266 (All rights reserved.) 266 SB

276 841 240 (Printed in U.S.A.) 240 SB

276 919 1202 (The following are trademarks of Digital Equipment Corporation: DEC and OpenVMS.) 1202 SB

276 997 1884 (The following are third-party trademarks: OSF/1 is a trademark of the Open Software Foundation, Inc. Windows NT is a trademark of) 1884 SB

276 1036 316 (Microsoft Corporation.) 316 SB

276 1114 1284 (All other trademarks and registered trademarks are the property of their respective holders.) 1284 SB

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%Page: 3 3

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 205 1055 (Table of Contents) 1055 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

276 689 221 (Overview) 221 SB

2198 689 28 (1) 28 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 800 319 (Intended Audience) 319 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

748 800 352 (................................) 352 SB

1100 800 352 (................................) 352 SB

1452 800 352 (................................) 352 SB

1804 800 352 (................................) 352 SB

2156 800 44 (....) 44 SB

2205 800 21 (1) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 888 340 (Document Structure) 340 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

770 888 352 (................................) 352 SB

1122 888 352 (................................) 352 SB

1474 888 352 (................................) 352 SB

1826 888 352 (................................) 352 SB

2178 888 22 (..) 22 SB

2205 888 21 (2) 21 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

276 989 423 (Installing IPROBE) 423 SB

2198 989 28 (3) 28 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 1100 620 (Installing IPROBE under OpenVMS) 620 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1056 1100 352 (................................) 352 SB

1408 1100 352 (................................) 352 SB

1760 1100 352 (................................) 352 SB

2112 1100 88 (........) 88 SB

2205 1100 21 (3) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1176 304 (Privileges Needed) 304 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

880 1176 352 (................................) 352 SB

1232 1176 352 (................................) 352 SB

1584 1176 352 (................................) 352 SB

1936 1176 264 (........................) 264 SB

2205 1176 21 (3) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1239 652 (IPROBE Files and Sample Installation) 652 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1232 1239 352 (................................) 352 SB

1584 1239 352 (................................) 352 SB

1936 1239 264 (........................) 264 SB

2205 1239 21 (3) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 1314 643 (Installing IPROBE under DEC OSF/1) 643 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1078 1314 352 (................................) 352 SB

1430 1314 352 (................................) 352 SB

1782 1314 352 (................................) 352 SB

2134 1314 66 (......) 66 SB

2205 1314 21 (6) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1390 304 (Privileges Needed) 304 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

880 1390 352 (................................) 352 SB

1232 1390 352 (................................) 352 SB

1584 1390 352 (................................) 352 SB

1936 1390 264 (........................) 264 SB

2205 1390 21 (6) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1453 652 (IPROBE Files and Sample Installation) 652 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1232 1453 352 (................................) 352 SB

1584 1453 352 (................................) 352 SB

1936 1453 264 (........................) 264 SB

2205 1453 21 (6) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 1528 665 (Installing IPROBE under Windows NT) 665 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1100 1528 352 (................................) 352 SB

1452 1528 352 (................................) 352 SB

1804 1528 352 (................................) 352 SB

2156 1528 44 (....) 44 SB

2205 1528 21 (8) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1604 304 (Privileges Needed) 304 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

880 1604 352 (................................) 352 SB

1232 1604 352 (................................) 352 SB

1584 1604 352 (................................) 352 SB

1936 1604 264 (........................) 264 SB

2205 1604 21 (8) 21 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1667 652 (IPROBE Files and Sample Installation) 652 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1232 1667 352 (................................) 352 SB

1584 1667 352 (................................) 352 SB

1936 1667 264 (........................) 264 SB

2205 1667 21 (8) 21 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

276 1755 343 (Using IPROBE) 343 SB

2170 1755 56 (10) 56 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 1866 303 (Command Syntax) 303 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

737 1866 352 (................................) 352 SB

1089 1866 352 (................................) 352 SB

1441 1866 352 (................................) 352 SB

1793 1866 352 (................................) 352 SB

2145 1866 33 (...) 33 SB

2184 1866 42 (10) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1942 133 (Options) 133 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

715 1942 352 (................................) 352 SB

1067 1942 352 (................................) 352 SB

1419 1942 352 (................................) 352 SB

1771 1942 352 (................................) 352 SB

2123 1942 55 (.....) 55 SB

2184 1942 42 (11) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2005 114 (Events) 114 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

693 2005 352 (................................) 352 SB

1045 2005 352 (................................) 352 SB

1397 2005 352 (................................) 352 SB

1749 2005 352 (................................) 352 SB

2101 2005 77 (.......) 77 SB

2184 2005 42 (12) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2080 269 (Using Counting) 269 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

704 2080 352 (................................) 352 SB

1056 2080 352 (................................) 352 SB

1408 2080 352 (................................) 352 SB

1760 2080 352 (................................) 352 SB

2112 2080 66 (......) 66 SB

2184 2080 42 (16) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2168 274 (Using Sampling) 274 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

704 2168 352 (................................) 352 SB

1056 2168 352 (................................) 352 SB

1408 2168 352 (................................) 352 SB

1760 2168 352 (................................) 352 SB

2112 2168 66 (......) 66 SB

2184 2168 42 (17) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2256 393 (Generating Histograms) 393 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

825 2256 352 (................................) 352 SB

1177 2256 352 (................................) 352 SB

1529 2256 352 (................................) 352 SB

1881 2256 297 (...........................) 297 SB

2184 2256 42 (18) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2344 388 (Running the Workload) 388 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

814 2344 352 (................................) 352 SB

1166 2344 352 (................................) 352 SB

1518 2344 352 (................................) 352 SB

1870 2344 308 (............................) 308 SB

2184 2344 42 (19) 42 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

276 2445 255 (Using REP) 255 SB

2170 2445 56 (20) 56 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2556 303 (Command Syntax) 303 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

737 2556 352 (................................) 352 SB

1089 2556 352 (................................) 352 SB

1441 2556 352 (................................) 352 SB

1793 2556 352 (................................) 352 SB

2145 2556 33 (...) 33 SB

2184 2556 42 (20) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2644 234 (Running REP) 234 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

660 2644 352 (................................) 352 SB

1012 2644 352 (................................) 352 SB

1364 2644 352 (................................) 352 SB

1716 2644 352 (................................) 352 SB

2068 2644 110 (..........) 110 SB

2184 2644 42 (20) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2720 307 (OpenVMS Kernel) 307 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

891 2720 352 (................................) 352 SB

1243 2720 352 (................................) 352 SB

1595 2720 352 (................................) 352 SB

1947 2720 231 (.....................) 231 SB

2184 2720 42 (21) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2783 330 (DEC OSF/1 Kernel) 330 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

913 2783 352 (................................) 352 SB

1265 2783 352 (................................) 352 SB

1617 2783 352 (................................) 352 SB

1969 2783 209 (...................) 209 SB

2184 2783 42 (22) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2846 226 (Windows NT) 226 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

803 2846 352 (................................) 352 SB

1155 2846 352 (................................) 352 SB

1507 2846 352 (................................) 352 SB

1859 2846 319 (.............................) 319 SB

2184 2846 42 (22) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

726 2909 679 (Known Restrictions under Windows NT) 679 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1408 2909 352 (................................) 352 SB

1760 2909 352 (................................) 352 SB

2112 2909 66 (......) 66 SB

2184 2909 42 (22) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 2997 595 (Determining the Loaded Addresses) 595 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1023 2997 352 (................................) 352 SB

1375 2997 352 (................................) 352 SB

1727 2997 352 (................................) 352 SB

2079 2997 99 (.........) 99 SB

2184 2997 42 (22) 42 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2214 3077 12 (i) 12 SB

255 255 255 fC

/fm 256 def

1961 3 270 3072 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3069 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica-Bold

%%+ font Times-Roman

%%Page: 4 4

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 203 409 (Using IPREDUCE) 409 SB

2170 203 56 (24) 56 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 314 347 (IPREDUCE Options) 347 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

781 314 352 (................................) 352 SB

1133 314 352 (................................) 352 SB

1485 314 352 (................................) 352 SB

1837 314 341 (...............................) 341 SB

2184 314 42 (24) 42 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

276 415 376 (Using MODPME) 376 SB

2170 415 56 (27) 56 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 526 303 (Command Syntax) 303 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

737 526 352 (................................) 352 SB

1089 526 352 (................................) 352 SB

1441 526 352 (................................) 352 SB

1793 526 352 (................................) 352 SB

2145 526 33 (...) 33 SB

2184 526 42 (27) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 614 196 (Description) 196 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

627 614 352 (................................) 352 SB

979 614 352 (................................) 352 SB

1331 614 352 (................................) 352 SB

1683 614 352 (................................) 352 SB

2035 614 143 (.............) 143 SB

2184 614 42 (27) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 702 91 (Flags) 91 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

517 702 352 (................................) 352 SB

869 702 352 (................................) 352 SB

1221 702 352 (................................) 352 SB

1573 702 352 (................................) 352 SB

1925 702 253 (.......................) 253 SB

2184 702 42 (27) 42 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 790 287 (Interactive Mode) 287 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

715 790 352 (................................) 352 SB

1067 790 352 (................................) 352 SB

1419 790 352 (................................) 352 SB

1771 790 352 (................................) 352 SB

2123 790 55 (.....) 55 SB

2184 790 42 (28) 42 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

276 891 363 (Getting Started) 363 SB

2170 891 56 (29) 56 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

426 1002 1227 (Example of Analyzing an Application using IPROBE under DEC OSF/1) 1227 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1661 1002 352 (................................) 352 SB

2013 1002 165 (...............) 165 SB

2184 1002 42 (29) 42 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2202 3077 24 (ii) 24 SB

255 255 255 fC

/fm 256 def

1961 3 270 3072 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3069 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica-Bold

%%+ font Times-Roman

%%Page: 5 5

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 805 555 (Overview) 555 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1264 147 (IPROBE) 147 SB

723 1264 1426 ( is a sampling and performance analysis tool designed to investigate system resource) 1426 SB

576 1314 1582 (problems on Alpha systems. IPROBE can be used for user and system code profiling based on) 1582 SB

576 1364 1587 (any of the Alpha on-chip events, and many exist. For example, by using IPROBE, you can see) 1587 SB

576 1414 1585 (where the code spends the most time, and, you can also see where the code generates the most) 1585 SB

576 1464 1420 (dcache misses and probably find the specific instructions that are missing the cache.) 1420 SB

576 1540 147 (IPROBE) 147 SB

723 1540 1066 ( operates in three modes: counting, sampling, and histogram\227) 1066 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1612 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1616 1553 (Counting mode implements an in-memory counter and displays the delta value periodically.) 1553 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1688 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1692 1222 (Sampling mode causes IPROBE to collect and write samples out to disk.) 1222 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1764 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1768 1503 (Histogram mode creates in-memory histograms on an output screen or in a file that show) 1503 SB

651 1818 1444 (such information as IPLs, processor modes, totals, and where in the address space the) 1444 SB

651 1868 581 (specified event or events occurred.) 581 SB

576 1944 1649 (Counting is like histogramming. For example, if you are counting branch instructions and branch) 1649 SB

576 1994 1468 (mispredicts, counting mode will show total branch instructions and branch mispredicts) 1468 SB

576 2044 1613 (periodically and branch instructions and branch mispredicts misses per second. Histogramming) 1613 SB

576 2094 1585 (does that too, but histogramming can also break it down further: branch instructions in kernel) 1585 SB

576 2144 1644 (mode, branch instructions in user mode, etc. \(for a mode histogram\), or branch mispredicts at the) 1644 SB

576 2194 324 (various IPL values.) 324 SB

576 2270 201 (Analysis of ) 201 SB

777 2270 147 (IPROBE) 147 SB

924 2270 1286 ('s performance reports gives information that allows you to determine where) 1286 SB

576 2320 1190 (in the operating system or user's program the counted event happened.) 1190 SB

576 2398 147 (IPROBE) 147 SB

723 2398 412 ( works under OpenVMS) 412 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 1172 3249 0 0 CB

1135 2394 37 (\324) 37 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1172 2398 226 (, DEC OSF/1) 226 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 1435 3249 0 0 CB

1398 2394 37 (\324) 37 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1435 2398 321 (, and Windows NT) 321 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 1793 3249 0 0 CB

1756 2394 37 (\324) 37 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1793 2398 11 (.) 11 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 2521 715 (Intended Audiences) 715 SB

255 255 255 fC

/fm 256 def

1961 3 270 2515 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 2512 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2649 1586 (The intended audiences for this user guide are software developers, performance analysts, and) 1586 SB

576 2699 1406 (hardware developers, all who need to investigate software and system performance.) 1406 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1948 3074 186 (Overview) 186 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (1) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 6 6

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 217 723 (Document Structure) 723 SB

255 255 255 fC

/fm 256 def

1961 3 270 211 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 208 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 338 162 (Overview) 162 SB

576 414 173 (Installing ) 173 SB

749 414 147 (IPROBE) 147 SB

576 490 111 (Using ) 111 SB

687 490 147 (IPROBE) 147 SB

576 566 100 (Using) 100 SB

676 566 87 ( REP) 87 SB

576 642 100 (Using) 100 SB

676 642 214 ( IPREDUCE) 214 SB

576 718 294 (Using MODPME) 294 SB

576 794 258 (Getting Started) 258 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1948 3074 186 (Overview) 186 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (2) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 7 7

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 805 585 (Installing ) 585 SB

861 805 478 (IPROBE) 478 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1308 1245 (Installing IPROBE under OpenVMS) 1245 SB

255 255 255 fC

/fm 256 def

1961 3 270 1302 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1299 B

1 F

n

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 1461 496 (Privileges Needed) 496 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1561 1192 (Under OpenVMS, you need the following privileges to install and run ) 1192 SB

1768 1561 147 (IPROBE) 147 SB

1915 1561 11 (.) 11 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1633 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1637 177 (CMKRNL) 177 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1709 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1713 159 (SYSLCK) 159 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1785 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1789 213 (DIAGNOSE) 213 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1861 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1865 201 (EXQUOTA) 201 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1937 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1941 175 (CMEXEC) 175 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 2042 223 (IPROBE) 223 SB

799 2042 806 ( Files and Sample Installation) 806 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2142 695 (Under OpenVMS, the files that make up ) 695 SB

1271 2142 147 (IPROBE) 147 SB

1418 2142 254 ( are as follows:) 254 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2214 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2218 734 (IPREDUCE.EXE\227data reduction program) 734 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2290 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2294 933 (IPROBE*.RELEASE_NOTES\227IPROBE release notes) 933 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2366 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2370 601 (IPROBE.EXE\227collection program) 601 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2442 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2446 1132 (IPROBE$IVP.COM\227installation verification command procedure) 1132 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2518 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2522 1129 (IPROBE$STARTUP.COM\227IPROBE startup command procedure) 1129 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2594 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2598 685 (PFDRIVER.EXE\227pseudo-device driver) 685 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2670 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2674 752 (PFDRIVER.STB\227PFDRIVER symbol table) 752 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2746 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2750 649 (PFMDEF.EXE\227message information) 649 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2822 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2826 635 (PFMPROSHR.EXE\227system services) 635 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2898 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2902 836 (PFMPROSHR.STB\227PFMPROSHR symbol table) 836 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2974 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2978 674 (PFMSHR.EXE\227combination functions) 674 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (3) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 8 8

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 42 /Symbol font

0 0 0 fC

gs 595 3249 0 0 CB

576 199 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 203 676 (PFMSHR.STB\227PFMSHR symbol table) 676 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 275 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 279 574 (REP.EXE\227gets system addresses) 574 SB

576 431 1613 (These files are bundled in a saveset named IPROBE. You need approximately 1,500 free blocks) 1613 SB

576 481 159 (to install ) 159 SB

735 481 147 (IPROBE) 147 SB

882 481 11 (.) 11 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

576 582 1061 (Sample IPROBE Installation under OpenVMS) 1061 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 674 1627 (Under OpenVMS, use the VMSINSTAL utility to unbundle and install the IPROBE saveset. We) 1627 SB

576 724 396 (recommend you install ) 396 SB

972 724 147 (IPROBE) 147 SB

1119 724 967 ( using the SYSTEM account or a privileged account with) 967 SB

576 774 339 (SETPRV turned on.) 339 SB

576 850 1633 (Shown next is a sample IPROBE installation on a OpenVMS system. Follow the installation and) 1633 SB

576 900 853 (note what actions you must take after it completes.) 853 SB

32 0 0 33 33 0 0 0 26 /Courier /font0 ANSIFont font

576 1002 940 ($@sys$update:vmsinstal iprobe2007 sysdev:[kits]) 940 SB

756 1068 1120 (OpenVMS AXP Software Product Installation Procedure V6.1) 1120 SB

576 1134 520 (It is 8-DEC-1994 at 11:42.) 520 SB

576 1200 940 (Enter a question mark \(?\) at any time for help.) 940 SB

576 1266 1360 (%VMSINSTAL-W-NOTSYSTEM, You are not logged in to the SYSTEM account.) 1360 SB

576 1299 1240 (%VMSINSTAL-W-ACTIVE, The following processes are still active:) 1240 SB

756 1332 260 (DECW$SERVER_0) 260 SB

756 1365 160 (DECW$MWM) 160 SB

756 1398 240 (DECW$TE_0064) 240 SB

756 1431 140 (WIBECAN) 140 SB

576 1464 800 (* Do you want to continue anyway [NO]? y) 800 SB

576 1497 1240 (* Are you satisfied with the backup of your system disk [YES]?) 1240 SB

576 1563 820 (The following products will be processed:) 820 SB

756 1629 240 (IPROBE2 V0.7) 240 SB

756 1695 940 (Beginning installation of IPROBE2 T0.7 at 11:42) 940 SB

576 1761 1080 (%VMSINSTAL-I-RESTORE, Restoring product save set A ...) 1080 SB

576 1794 1500 (%VMSINSTAL-I-RELMOVED, Product's release notes have been moved to SYS$HELP.) 1500 SB

576 1827 1300 (* Do you want to purge files replaced by this installation [YES]?) 1300 SB

756 1860 1200 (************************************************************) 1200 SB

756 1893 20 (*) 20 SB

2106 1893 120 (     *) 120 SB

756 1926 1120 (*  You may run the IVP now or later.  If you wish to run) 1120 SB

2106 1926 120 (     *) 120 SB

756 1959 1100 (*  run it later, you may do so by executing the command) 1100 SB

2106 1959 120 (     *) 120 SB

756 1992 20 (*) 20 SB

2106 1992 120 (     *) 120 SB

756 2025 620 (*      @SYS$TEST:IPROBE$IVP.COM) 620 SB

2106 2025 120 (     *) 120 SB

756 2058 20 (*) 20 SB

2106 2058 120 (     *) 120 SB

756 2091 1200 (************************************************************) 1200 SB

576 2124 20 (*) 20 SB

756 2124 1120 (Do you want to run the IVP after the installation [YES]?) 1120 SB

576 2157 1000 (%IPROBE2-I-ALLASKED, All questions have been asked) 1000 SB

576 2190 1600 (%IPROBE2-I-MAILING, Attempting to notify developer; ignore mail failure messages) 1600 SB

576 2223 1080 (%VMSINSTAL-I-RESTORE, Restoring product save set B ...) 1080 SB

756 2256 1200 (************************************************************) 1200 SB

756 2289 20 (*) 20 SB

2106 2289 120 (     *) 120 SB

756 2322 840 (*  The following files have been provided:) 840 SB

2106 2322 120 (     *) 120 SB

756 2355 20 (*) 20 SB

2106 2355 120 (     *) 120 SB

756 2388 520 (*     SYS$LOADABLE_IMAGES:) 520 SB

2106 2388 120 (     *) 120 SB

756 2421 440 (*         PFDRIVER.EXE) 440 SB

1386 2421 400 (Pseudo-device driver) 400 SB

2106 2421 120 (     *) 120 SB

756 2454 440 (*         PFDRIVER.STB) 440 SB

1386 2454 440 (Symbol table for above) 440 SB

2106 2454 120 (     *) 120 SB

756 2487 320 (*     SYS$SHARE:) 320 SB

2106 2487 120 (     *) 120 SB

756 2520 460 (*         PFMPROSHR.EXE) 460 SB

1386 2520 300 (System services) 300 SB

2106 2520 120 (     *) 120 SB

756 2553 460 (*         PFMPROSHR.STB) 460 SB

1386 2553 440 (Symbol table for above) 440 SB

2106 2553 120 (     *) 120 SB

756 2586 400 (*         PFMSHR.EXE) 400 SB

1386 2586 420 (Combination functions) 420 SB

2106 2586 120 (     *) 120 SB

756 2619 400 (*         PFMSHR.STB) 400 SB

1386 2619 460 (Symbol table for above ) 460 SB

2106 2619 120 (     *) 120 SB

756 2652 360 (*     SYS$MESSAGE:) 360 SB

2106 2652 120 (     *) 120 SB

756 2685 400 (*         PFMDEF.EXE) 400 SB

1386 2685 380 (Message information) 380 SB

2106 2685 120 (     *) 120 SB

756 2718 340 (*     SYS$SYSTEM:) 340 SB

2106 2718 120 (     *) 120 SB

756 2751 400 (*         IPROBE.EXE) 400 SB

1386 2751 360 (Collection program) 360 SB

2106 2751 120 (     *) 120 SB

756 2784 440 (*         IPREDUCE.EXE) 440 SB

1386 2784 440 (Data reduction program) 440 SB

2106 2784 120 (     *) 120 SB

756 2817 340 (*         REP.EXE) 340 SB

1386 2817 420 (Gets system addresses) 420 SB

2106 2817 120 (     *) 120 SB

756 2850 360 (*     SYS$STARTUP:) 360 SB

2106 2850 120 (     *) 120 SB

756 2883 560 (*         IPROBE$STARTUP.COM) 560 SB

1386 2883 340 (Startup procedure) 340 SB

2106 2883 120 (     *) 120 SB

756 2916 300 (*     SYS$TEST:) 300 SB

2106 2916 120 (     *) 120 SB

756 2949 480 (*         IPROBE$IVP.COM) 480 SB

1386 2949 400 (Install verification) 400 SB

2106 2949 120 (     *) 120 SB

756 2982 300 (*     SYS$HELP:) 300 SB

2106 2982 120 (     *) 120 SB

756 3015 400 (*         IPROBE.TXT) 400 SB

1386 3015 340 (Usage information) 340 SB

2106 3015 120 (     *) 120 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (4) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Courier

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 9 9

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 26 /Courier /font0 ANSIFont font

0 0 0 fC

756 201 20 (*) 20 SB

2106 201 120 (     *) 120 SB

756 234 520 (*  Be sure to add the line) 520 SB

2106 234 120 (     *) 120 SB

756 267 20 (*) 20 SB

2106 267 120 (     *) 120 SB

756 300 780 (*     $ @SYS$STARTUP:IPROBE$STARTUP.COM) 780 SB

2106 300 120 (     *) 120 SB

756 333 20 (*) 20 SB

2106 333 120 (     *) 120 SB

756 366 1080 (*  to your system startup procedure, SYSTARTUP_VMS.COM) 1080 SB

2106 366 120 (.    *) 120 SB

756 399 20 (*) 20 SB

2106 399 120 (     *) 120 SB

756 432 1200 (************************************************************) 1200 SB

576 465 1560 (%VMSINSTAL-I-MOVEFILES, Files will now be moved to their target directories...) 1560 SB

756 498 760 (+------------------------------------+) 760 SB

756 531 360 (|  Running the IVP) 360 SB

1386 531 120 (     |) 120 SB

756 564 760 (+------------------------------------+) 760 SB

756 597 760 (+------------------------------------+) 760 SB

756 630 580 (|  Creating working directory) 580 SB

1386 630 120 (     |) 120 SB

756 663 760 (+------------------------------------+) 760 SB

756 696 760 (+------------------------------------+) 760 SB

756 729 300 (|  Running REP ) 300 SB

1386 729 120 (     |) 120 SB

756 762 760 (+------------------------------------+) 760 SB

576 795 380 (Reading exec images) 380 SB

576 828 660 (Reading images installed resident) 660 SB

576 861 380 (Resolving addresses) 380 SB

576 894 780 (Writing output file  addresses.resolved) 780 SB

756 927 760 (+------------------------------------+) 760 SB

756 960 580 (|  Running IPROBE -- Counting) 580 SB

756 993 760 (+------------------------------------+) 760 SB

576 1026 80 (time) 80 SB

756 1026 300 ( cpu freq event) 300 SB

1386 1026 380 ( # events  evts/sec) 380 SB

576 1059 460 (11:43:33  0 2^16 cycles) 460 SB

1386 1059 380 (150077440 150077440) 380 SB

576 1092 460 (11:43:34  0 2^16 cycles) 460 SB

1386 1092 380 (150208512 150208512) 380 SB

576 1125 460 (11:43:35  0 2^16 cycles) 460 SB

1386 1125 380 (150142976 150142976) 380 SB

576 1158 460 (11:43:36  0 2^16 cycles) 460 SB

1386 1158 380 (150142976 150142976) 380 SB

576 1191 460 (11:43:37  0 2^16 cycles) 460 SB

1386 1191 380 (150142976 150142976) 380 SB

576 1224 460 (11:43:38  0 2^16 cycles) 460 SB

1386 1224 380 (150142976 150142976) 380 SB

576 1257 460 (11:43:39  0 2^16 cycles) 460 SB

1386 1257 380 (150142976 150142976) 380 SB

576 1290 460 (11:43:40  0 2^16 cycles) 460 SB

1386 1290 380 (150208512 150208512) 380 SB

576 1323 460 (11:43:41  0 2^16 cycles) 460 SB

1386 1323 380 (150142976 150142976) 380 SB

576 1356 460 (11:43:42  0 2^16 cycles) 460 SB

1386 1356 380 (147783680 147783680) 380 SB

576 1389 360 (Total event count:) 360 SB

576 1422 720 (11:43:43  0 2^16 cycles   1499136000) 720 SB

756 1488 760 (+------------------------------------+) 760 SB

756 1521 580 (|  Running IPROBE -- Sampling) 580 SB

1386 1521 120 (     |) 120 SB

756 1554 760 (+------------------------------------+) 760 SB

576 1620 340 (Start of sampling) 340 SB

576 1653 300 (End of sampling) 300 SB

576 1686 400 (Buffers written : 45) 400 SB

576 1719 520 (Partial buffers written: 1) 520 SB

756 1785 760 (+------------------------------------+) 760 SB

756 1818 380 (|  Running IPREDUCE) 380 SB

1386 1818 120 (     |) 120 SB

756 1851 760 (+------------------------------------+) 760 SB

756 1884 760 (+------------------------------------+) 760 SB

756 1917 580 (|  IVP completed SUCCESSFULLY) 580 SB

1386 1917 120 (     |) 120 SB

756 1950 760 (+------------------------------------+) 760 SB

756 1983 760 (+------------------------------------+) 760 SB

756 2016 280 (|  Cleaning up) 280 SB

1386 2016 120 (     |) 120 SB

756 2049 760 (+------------------------------------+) 760 SB

756 2115 940 (Installation of IPROBE2 T0.7 completed at 11:43) 940 SB

576 2181 1160 (Adding history entry in VMI$ROOT:[SYSUPD]VMSINSTAL.HISTORY) 1160 SB

576 2214 1380 (Creating installation data file: VMI$ROOT:[SYSUPD]IPROBE2007.VMI_DATA) 1380 SB

756 2280 660 (VMSINSTAL procedure done at 11:44) 660 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2394 1592 (Remember to add the following line \(IPROBE's startup command file\) to your system's startup) 1592 SB

576 2444 947 (procedure, SYS$STARTUP:SYSTARTUP_VMS.COM.) 947 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

726 2508 690 ($ @SYS$STARTUP:IPROBE$STARTUP.COM) 690 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2637 406 (Also, if you did not run ) 406 SB

982 2637 147 (IPROBE) 147 SB

1129 2637 692 ('s verification procedure while installing ) 692 SB

1821 2637 147 (IPROBE) 147 SB

1968 2637 225 (, please do so) 225 SB

576 2687 921 (as soon as possible by issuing the following command:) 921 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

726 2751 519 ($ @SYS$TEST:IPROBE$IVP.COM) 519 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

576 2829 255 (Assigning ) 255 SB

831 2829 502 (IPROBE, IPREDUCE, ) 502 SB

1333 2829 103 (and ) 103 SB

1436 2829 116 (REP ) 116 SB

1552 2829 673 (Commands under OpenVMS) 673 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2921 1648 (Under OpenVMS, include the following foreign commands in either the system-wide login file or) 1648 SB

576 2971 442 (process-specific login file:) 442 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (5) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Courier

%%+ font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 10 10

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 204 375 ($ IPROBE == "$IPROBE") 375 SB

576 245 467 ($ IPREDUCE == "$IPREDUCE") 467 SB

576 286 261 ($ REP == "$REP") 261 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 383 1286 (Installing IPROBE under DEC OSF/1) 1286 SB

255 255 255 fC

/fm 256 def

1961 3 270 377 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 374 B

1 F

n

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 536 496 (Privileges Needed) 496 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 636 1642 (Under DEC OSF/1, log in as root to install IPROBE. Once you have installed IPROBE, any DEC) 1642 SB

576 686 558 (OSF/1 account can run IPROBE.) 558 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 787 1029 (IPROBE Files and Sample Installation) 1029 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 887 1603 (Under DEC OSF/1, the files that make up IPROBE and their pathnames where they will reside) 1603 SB

576 937 817 (once you have installed IPROBE, are as follows:) 817 SB

576 1013 551 (/sys/src/MAKEDEV\226pfm device) 551 SB

576 1089 702 (/sys/src/Makefile\226shared library Makefile) 702 SB

576 1165 844 (/sys/src/OSF_V2/ctr_routines.o\226used for V2 build) 844 SB

576 1241 935 (/sys/src/OSF_V2/ctr_routines_osf1.o\226used for V2 build) 935 SB

576 1317 858 (/sys/src/OSF_V2/ev4_routines.o\226used for V2 build) 858 SB

576 1393 858 (/sys/src/OSF_V2/ev5_routines.o\226used for V2 build) 858 SB

576 1469 773 (/sys/src/OSF_V2/pfm_isr.o\226used for V2 build) 773 SB

576 1545 866 (/sys/src/OSF_V2/pfm_routines.o\226used for V2 build) 866 SB

576 1621 957 (/sys/src/OSF_V2/pfm_routines_osf1.o\226used for V2 build) 957 SB

576 1697 844 (/sys/src/OSF_V3/ctr_routines.o\226used for V3 build) 844 SB

576 1773 935 (/sys/src/OSF_V3/ctr_routines_osf1.o\226used for V3 build) 935 SB

576 1849 858 (/sys/src/OSF_V3/ev4_routines.o\226used for V3 build) 858 SB

576 1925 858 (/sys/src/OSF_V3/ev5_routines.o\226used for V3 build) 858 SB

576 2001 836 (/sys/src/OSF_V3/pfm_isr.o/sys\226used for V3 build) 836 SB

576 2077 803 (/src/OSF_V3/pfm_routines.o\226used for V3 build) 803 SB

576 2153 957 (/sys/src/OSF_V3/pfm_routines_osf1.o\226used for V3 build) 957 SB

576 2229 978 (/sys/src/pfm_user_routines.o\226used for making pfm library) 978 SB

576 2305 1069 (/sys/src/pfm_user_routines_osf1.o\226used for making pfm library) 1069 SB

576 2381 840 (/sys/src/so_locations\226used for making pfm library) 840 SB

576 2457 573 (/sys/src/testpfm\226API test program) 573 SB

576 2533 665 (/usr/bin/ipreduce\226IPREDUCE program) 665 SB

576 2609 571 (/usr/bin/iprobe\226IPROBE program) 571 SB

576 2685 647 (/usr/bin/modpme\226MODPME program) 647 SB

576 2761 448 (/usr/bin/rep\226REP program) 448 SB

576 2837 1044 (/usr/doc/IPROBE/INSTALL.TXT\226installation documentation) 1044 SB

576 2913 1247 (/usr/doc/IPROBE/README.FIRST\226read before installing documentation) 1247 SB

576 2989 1219 (/usr/doc/IPROBE/README.IPREDUCE\226data reduction documentation) 1219 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (6) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 11 11

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

0 0 0 fC

576 203 1069 (/usr/doc/IPROBE/README.IPROBE\226IPROBE documentation) 1069 SB

576 279 1141 (/usr/doc/IPROBE/README.MODPME\226MODPME documentation) 1141 SB

576 355 927 (/usr/doc/IPROBE/README.REP\226REP documentation) 927 SB

576 431 818 (/usr/doc/IPROBE/RELEASE.TXT\226release notes) 818 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 532 1262 (Sample IPROBE Installation under DEC OSF/1) 1262 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 632 1649 (Under DEC OSF/1, uncompress the IPROBE kit and use tar to restore the IPROBE files and setld) 1649 SB

576 682 691 (to install IPROBE from the root account.) 691 SB

576 758 1583 (Shown next is a sample IPROBE installation on a DEC OSF/1 system. Follow the installation) 1583 SB

576 808 962 (and note what actions you must take after its completion.) 962 SB

32 0 0 33 33 0 0 0 26 /Courier /font0 ANSIFont font

576 902 580 (># uncompress IPROBE040.tar.Z) 580 SB

576 935 480 (># tar -xf IPROBE040.tar) 480 SB

576 968 480 (># setld -i |grep IPROBE) 480 SB

576 1001 1400 (IPRBASE030      installed       See /usr/doc/IPROBE for information on) 1400 SB

576 1034 540 (installing and using IPROBE) 540 SB

576 1067 440 (># setld -d IPRBASE030) 440 SB

576 1133 1380 (Deleting "See /usr/doc/IPROBE for information on installing and using) 1380 SB

576 1166 420 (IPROBE" \(IPRBASE030\).) 420 SB

576 1199 480 (># setld -l . IPRBASE040) 480 SB

576 1265 1300 (Checking file system space required to install specified subsets:) 1300 SB

576 1331 580 (File system space checked OK.) 580 SB

576 1364 720 (Checking for previous IPROBE kits...) 720 SB

576 1397 740 (No previous IPROBE installation found) 740 SB

576 1463 220 (IPROBE V0.4) 220 SB

576 1496 480 (   Copying from . \(disk\)) 480 SB

576 1529 240 (   Verifying) 240 SB

576 1595 760 (Configuring "IPROBE V0.4" \(IPRBASE040\)) 760 SB

576 1661 1140 (To use IPROBE, a special device driver must be installed.) 1140 SB

576 1694 1120 (If you answer yes to the next question, the installation) 1120 SB

576 1727 1080 (procedure will edit the necessary system files and run) 1080 SB

576 1760 1120 (doconfig for you. If you prefer to do this manually, see) 1120 SB

576 1793 880 (/usr/doc/IPROBE/INSTALL.TXT for instructions) 880 SB

576 1859 1420 (>Do you want to continue with automatic configuration? [yes or no]: yes) 1420 SB

576 1925 1340 (Copying /sys/conf/alpha/files to /sys/conf/alpha/files.orig... Done) 1340 SB

576 1991 1040 (Removing default pfm device and old IPROBE info from) 1040 SB

576 2024 580 (/sys/conf/alpha/files... Done) 580 SB

576 2090 1280 (Adding IPROBE object file names to /sys/conf/alpha/files... Done) 1280 SB

576 2123 520 (Creating the pfm device...) 520 SB

576 2156 660 (MAKEDEV: special file\(s\) for pfm:) 660 SB

576 2189 60 (pfm) 60 SB

576 2255 760 (Building pfm shareable library... Done) 760 SB

576 2321 960 (*** KERNEL CONFIGURATION AND BUILD PROCEDURE ***) 960 SB

576 2387 940 (Saving /sys/conf/HAGGAI as /sys/conf/HAGGAI.bck) 940 SB

576 2453 1120 (>Do you want to edit the configuration file? \(y/n\) [n]:n) 1120 SB

576 2552 620 (*** PERFORMING KERNEL BUILD ***) 620 SB

576 2585 940 (        Working....Fri Sep 16 11:20:15 EDT 1994) 940 SB

576 2618 940 (        Working....Fri Sep 16 11:22:15 EDT 1994) 940 SB

576 2651 940 (        Working....Fri Sep 16 11:24:16 EDT 1994) 940 SB

576 2717 720 (The new kernel is /sys/HAGGAI/vmunix) 720 SB

576 2783 1360 (>Enter the name of the backup copy of current /vmunix [/vmunix.bck]:) 1360 SB

576 2849 100 ( Done) 100 SB

576 2882 640 ( IPROBE installation is complete) 640 SB

576 2915 840 ( A system reboot is required to run IPROBE) 840 SB

576 2948 1200 ( >>> Please refer to the README files in /usr/doc/IPROBE <<<) 1200 SB

576 2981 1200 ( >>> for information about installing and using IPROBE   <<<) 1200 SB

576 3014 960 ( IPROBE will be functional after the next reboot) 960 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (7) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Courier

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 12 12

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

576 274 1573 (Running IPROBE, IPREDUCE, and REP under DEC OSF/1) 1573 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 374 1532 (Under DEC OSF/1, to run IPROBE, IPREDUCE, and REP, you simply issue the following) 1532 SB

576 424 303 (command strings:) 303 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 488 299 (>>>iprobe <options>) 299 SB

576 529 334 (>>>ipreduce <options>) 334 SB

576 570 278 (>>>rep <switches>) 278 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 667 1343 (Installing IPROBE under Windows NT) 1343 SB

255 255 255 fC

/fm 256 def

1961 3 270 661 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 658 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 795 1621 (Currently, the version of the Windows NT operating system required to install and run IPROBE) 1621 SB

576 845 133 (is V3.5.) 133 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 946 496 (Privileges Needed) 496 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1046 1567 (Under Windows NT, you need to be a member of the Administrators group to install and run) 1567 SB

576 1096 158 (IPROBE.) 158 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 1197 1029 (IPROBE Files and Sample Installation) 1029 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1297 1141 (Under Windows NT, the files that make up IPROBE are as follows:) 1141 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1369 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1373 873 (iprobe.ps\227draft version of IPROBE documentation) 873 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1445 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1449 577 (install.bat\227installation procedure) 577 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1521 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1525 826 (regini.exe\227utility used by installation procedure) 826 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1597 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1601 1070 (iprkrnl.ini\227definition of iprkrnl used by installation procedure) 1070 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1673 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1677 1289 (iprobe.exe\227IPROBE command for sampling, histogramming, and counting) 1289 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1749 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1753 938 (iprobe.dbg\227coff debug symbols for IPROBE command) 938 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1825 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1829 1089 (rep.exe\227read entry points command for VA to routine mapping) 1089 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1901 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1905 638 (rep.dbg\227coff debug symbols for REP) 638 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1977 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1981 932 (ipreduce.exe\227command for reducing sample data files) 932 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2053 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2057 837 (ipreduce.dbg\227off debug symbols for IPREDUCE) 837 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2129 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2133 503 (procs.exe\227tility used by REP) 503 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2205 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2209 670 (procs.dbg\227off debug symbols for procs) 670 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2281 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2285 869 (ps.exe\227tility to list current PID and process names) 869 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2357 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2361 564 (ps.dbg\227off debug symbols for ps) 564 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2433 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2437 1457 (iprkrnl.sys\227river containing performance counter ISR and kernel mode IPROBE API) 1457 SB

651 2487 136 (routines) 136 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2559 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2563 726 (iprkrnl.dbg\227off debug symbols for iprkrnl) 726 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2635 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2639 1223 (iprshr.dll\227hareable library containing user mode IPROBE API routines) 1223 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2711 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2715 692 (iprshr.dbg\227off debug symbols for iprshr) 692 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 2816 1302 (Sample IPROBE Installation under Windows NT) 1302 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2916 1605 (Shown next is a sample IPROBE installation on a Windows NT system. Follow the installation) 1605 SB

576 2966 962 (and note what actions you must take after its completion.) 962 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (8) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 13 13

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 26 /Courier /font0 ANSIFont font

0 0 0 fC

576 264 320 (unzip iprobe.zip) 320 SB

576 297 480 (  Exploding: install.bat) 480 SB

576 330 500 (  Exploding: ipreduce.dbg) 500 SB

576 363 500 (  Exploding: ipreduce.exe) 500 SB

576 396 480 (  Exploding: iprkrnl.dbg) 480 SB

576 429 480 (  Exploding: iprkrnl.ini) 480 SB

576 462 480 (  Exploding: iprkrnl.sys) 480 SB

576 495 460 (  Exploding: iprobe.dbg) 460 SB

576 528 460 (  Exploding: iprobe.exe) 460 SB

576 561 440 (  Exploding: iprobe.ps) 440 SB

576 594 460 (  Exploding: iprshr.dbg) 460 SB

576 627 460 (  Exploding: iprshr.dll) 460 SB

576 660 440 (  Exploding: procs.dbg) 440 SB

576 693 440 (  Exploding: procs.exe) 440 SB

576 726 380 (  Exploding: ps.dbg) 380 SB

576 759 380 (  Exploding: ps.exe) 380 SB

576 792 460 (  Exploding: regini.exe) 460 SB

576 825 400 (  Exploding: rep.dbg) 400 SB

576 858 400 (  Exploding: rep.exe) 400 SB

576 924 140 (Install) 140 SB

576 957 1080 (Copying IprKrnl.sys to C:\\WINNT35\\system32\\drivers ...) 1080 SB

576 990 500 (        1 file\(s\) copied.) 500 SB

576 1023 900 (Copying IprShr.dll to C:\\WINNT35\\system32 ...) 900 SB

576 1056 500 (        1 file\(s\) copied.) 500 SB

576 1089 940 (Installing IprKrnl services in the registry ...) 940 SB

576 1155 1480 (--------------------------------------------------------------------------) 1480 SB

576 1221 1320 (You need to reboot the system for the installation to take effect.) 1320 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 1294 1613 (Running IPROBE, IPREDUCE, and REP under Windows NT) 1613 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1394 1554 (Under Windows NT, to run IPROBE, IPREDUCE, and REP, you simply issue the following) 1554 SB

576 1444 303 (command strings:) 303 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1508 242 (iprobe <options>) 242 SB

576 1549 277 (ipreduce <options>) 277 SB

576 1590 221 (rep <switches>) 221 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1775 3074 359 (Installing IPROBE) 359 SB

2134 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2179 3249 0 0 CB

2159 3071 20 (\267) 20 SB

gr

gs 2179 3249 0 0 CB

2158 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2179 3074 24 (  ) 24 SB

2203 3074 23 (9) 23 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Courier

%%+ font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 14 14

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 805 382 (Using ) 382 SB

658 805 478 (IPROBE) 478 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1308 632 (Command Syntax) 632 SB

255 255 255 fC

/fm 256 def

1961 3 270 1302 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1299 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1436 929 (Under OpenVMS, DEC OSF/1, and Windows NT, the ) 929 SB

1505 1436 147 (IPROBE) 147 SB

1652 1436 569 ( command line uses the following) 569 SB

576 1486 121 (syntax:) 121 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1591 948 (iprobe [-option [-option...]] [event[.freq][.skip] [event[.freq][.skip]...]]) 948 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1685 162 (Example:) 162 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1749 1334 (iprobe -method count -output pcsample.dat -duration 100 -interval 20 non_issues_cycles.low) 1334 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1843 136 (Rules\227) 136 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1915 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1919 586 (A dash \(-\) must precede an option.) 586 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1991 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1995 524 (A space must follow an option.) 524 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 670 3249 0 0 CB

651 2067 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

726 2071 968 (If you specify an option argument, a space must follow it.) 968 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2143 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2147 530 (A space must precede an event.) 530 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 670 3249 0 0 CB

651 2219 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

726 2223 1428 (If you specify an interrupt frequency, a period \(.\) must precede it. Do not separate an) 1428 SB

726 2273 1019 (event and an interrupt frequency with anything but a period.) 1019 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 2349 108 (Note: ) 108 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

684 2350 1484 (You can abbreviate both options and option arguments. However, you cannot abbreviate) 1484 SB

576 2400 117 (events.) 117 SB

576 2476 1532 (The following two sections briefly describe the options and events you can use in IPROBE.) 1532 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (10) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 15 15

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

576 203 217 (Options) 217 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 303 47 (In ) 47 SB

623 303 147 (IPROBE) 147 SB

770 303 1305 (, an option begins with a dash \(-\), must be followed by a space, and is usually) 1305 SB

576 353 1371 (followed by an option argument. An option argument is either a word or number.) 1371 SB

576 429 418 (The options available in ) 418 SB

994 429 147 (IPROBE) 147 SB

1141 429 254 ( are as follows:) 254 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 575 293 (Option and Format) 293 SB

1326 575 347 (Default or Explanation) 347 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 657 329 (-buffer_count [number]) 329 SB

1326 657 219 (-buffer_count 3) 219 SB

576 739 104 (-collect) 104 SB

1326 739 893 (List of items: PS \(64 bit\), PC \(64 bit\), PS32 \(32 bit\), PC32 \(32 ) 893 SB

1326 780 588 (bit\), time \(32 bit\), pid \(32 bit\), ctr \(32 bit\), ) 588 SB

1926 780 209 (and pri \(32 bit\)) 209 SB

1326 821 588 (OpenVMS defaults: PC32, PS32, pid, ctr) 588 SB

1326 862 539 (DEC OSF/1 defaults: PC, PS, pid, ctr) 539 SB

1326 903 623 (Windows NT defaults: PC32, PS32, pid, ctr) 623 SB

576 985 321 (-delay_start [seconds]) 321 SB

1326 985 207 (-delay_start 0 ) 207 SB

1626 985 305 (\(i.e., immediate start\)) 305 SB

576 1067 278 (-duration [seconds]) 278 SB

1326 1067 173 (-duration 0  ) 173 SB

1626 1067 332 (\(i.e., run to completion\)) 332 SB

576 1149 72 (-help) 72 SB

1326 1149 677 (Prints a summary usage message, including a ) 677 SB

1326 1190 685 (complete list of currently available event names) 685 SB

576 1272 149 (-input [file]) 149 SB

1326 1272 271 (no default input file) 271 SB

1326 1313 396 (Example: -input iprobe.cmd) 396 SB

1776 1313 449 (\(i.e., IPROBE reads command ) 449 SB

1776 1354 305 (line from iprobe.cmd\)) 305 SB

576 1436 253 (-interval [number]) 253 SB

1326 1436 152 (-interval 1 ) 152 SB

1626 1436 430 (\(i.e., print count each second\)) 430 SB

576 1518 386 (-method [sampling-method) 386 SB

962 1505 18 (1) 18 SB

980 1518 9 (]) 9 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1326 1518 332 (-method count \(default\)) 332 SB

1326 1557 229 (-method sample) 229 SB

1326 1598 205 (-method mode) 205 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1531 1585 18 (2) 18 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1326 1639 158 (-method ipl) 158 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1484 1626 18 (2) 18 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1326 1680 241 (-method address) 241 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1567 1667 18 (2) 18 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1326 1721 185 (-method total) 185 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1511 1708 18 (2) 18 SB

576 1803 101 (-mode ) 101 SB

1326 1803 142 (no default) 142 SB

1326 1844 890 (OpenVMS: kernel, executive, supervisor, user, interrupt, idle, ) 890 SB

1476 1885 160 (or selected) 160 SB

1326 1926 609 (DEC OSF/1: kernel, user, idle, or selected) 609 SB

1326 1967 481 (Windows NT: kernel, user, or idle) 481 SB

576 2049 140 (-nocollect) 140 SB

1326 2049 895 (must specify items you want to exclude \(see -collect for list of ) 895 SB

1326 2090 89 (items\)) 89 SB

576 2172 169 (-output [file]) 169 SB

1326 2172 313 (-output pcsample.dat ) 313 SB

1776 2172 389 (\(however, you can call the ) 389 SB

1776 2213 423 (output file anything you want\)) 423 SB

576 2295 616 (-pc_range [address1-address2].granularity) 616 SB

1326 2295 147 (-pc range ) 147 SB

1626 2295 487 (\(i.e., defaults to all addresses and) 487 SB

1626 2336 253 (a granularity of 1\)) 253 SB

576 2446 18 (1) 18 SB

594 2459 307 ( -method options are:) 307 SB

651 2541 27 (1.) 27 SB

726 2541 1062 (count: print a count of the number of events periodically; this is the default) 1062 SB

651 2582 27 (2.) 27 SB

726 2582 1422 (sample: create a file containing samples taken whenever an interrupt caused by an event occurred) 1422 SB

651 2623 27 (3.) 27 SB

726 2623 1469 (mode: histogram of the event counts for each CPU mode \(OpenVMS = user, exec, supervisor, kernel,) 1469 SB

726 2664 715 (interrupt, and idle; DEC OSF/1 = user and kernel\)) 715 SB

651 2705 27 (4.) 27 SB

726 2705 609 (ipl: histogram of event counts for each IPL) 609 SB

651 2746 27 (5.) 27 SB

726 2746 954 (address: histogram of the event counts for each specified address) 954 SB

651 2787 27 (6.) 27 SB

726 2787 996 (total: histogram of the event counts for each CPU in a multiprocessor) 996 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (11) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 16 16

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 191 27 (2 ) 27 SB

603 204 789 (Can be combined by specifying -method multiple times) 789 SB

651 271 181 (For example) 181 SB

832 271 18 (\226) 18 SB

726 325 484 ($ iprobe -method ipl -method total) 484 SB

651 379 394 (will display two histograms.) 394 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 470 188 (Events) 188 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 570 1640 (The EV4 Alpha chip has two performance counters that count a total of 15 or 17 events \(external) 1640 SB

576 620 785 (events are only meaningful on some systems\). ) 785 SB

1361 620 147 (IPROBE) 147 SB

1508 620 709 ( assigns each event specified by you to the) 709 SB

576 670 564 (appropriate performance counter.) 564 SB

576 746 1624 (The EV5 Alpha chip has three performance counters that count many more events. Some events) 1624 SB

576 796 714 (can be counted by more than one counter. ) 714 SB

1290 796 147 (IPROBE) 147 SB

1437 796 738 ( will tell you if the combination of events in) 738 SB

576 846 551 (your command string is invalid. ) 551 SB

1127 846 147 (IPROBE) 147 SB

1274 846 35 ('s ) 35 SB

1309 846 103 (HELP) 103 SB

1412 846 734 ( facility can assist you in choosing the right) 734 SB

576 896 553 (combination of events to specify.) 553 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 972 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 973 158 ( IPROBE) 158 SB

831 973 35 ('s ) 35 SB

866 973 103 (HELP) 103 SB

969 973 1207 ( facility is a "smart" facility. It looks to see what events are available on) 1207 SB

576 1023 457 (the system you are running) 457 SB

1033 1023 158 ( IPROBE) 158 SB

1191 1023 396 ( on and lists only them.) 396 SB

576 1175 1533 (Currently, in the IPROBE command line, events always appear after options. The different) 1533 SB

576 1225 698 (syntax for specifying events is as follows:) 698 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1289 163 (event[.freq]) 163 SB

576 1330 231 (event[.freq.skip]) 231 SB

576 1371 175 (event[..skip]) 175 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1424 1559 (where event=name of the event, freq=frequency number or low or high, and skip=number of) 1559 SB

576 1474 793 (interrupts to skip between samples \(default=0\).) 793 SB

576 1550 162 (Example:) 162 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1614 335 (non_issues_cycles.low) 335 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1743 1528 (The following lists contain all known events and their nicknames, if any, and the interrupt) 1528 SB

576 1793 950 (frequency values and counter or counters for each event.) 950 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 1869 108 (Note: ) 108 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

684 1870 1438 (Not all events are available on all Alpha chips, and some events cannot be combined.) 1438 SB

576 1920 1078 (IPROBE will flag invalid combinations of events as errors. Use ) 1078 SB

1654 1920 147 (IPROBE) 147 SB

1801 1920 35 ('s ) 35 SB

1836 1920 103 (HELP) 103 SB

1939 1920 264 ( facility or refer) 264 SB

576 1970 1489 (to this section for additional information when combining events in your command line.) 1489 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

576 2121 1117 (Events available on EV4 systems \(sorted alphabetically\)) 1117 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 2186 84 (Note:) 84 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

660 2186 1515 ( On EV4 systems, you can select one event from either Table 1 or Table 2 or one event from Table 1 and) 1515 SB

576 2227 117 (Table 2.) 117 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

576 2307 145 (Table 1) 145 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

1626 2359 336 (Interrupt Frequencies) 336 SB

576 2400 196 (Event Name ) 196 SB

1026 2400 180 (Description) 180 SB

1626 2400 73 (High) 73 SB

1814 2400 66 (Low) 66 SB

2076 2400 144 (Counters) 144 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2482 234 (bcache_victims ) 234 SB

1026 2482 443 (Backup cache \(which is on the) 443 SB

1626 2482 72 (4096) 72 SB

1814 2482 90 (65536) 90 SB

2076 2482 18 (0) 18 SB

1026 2523 318 (system board\) victims) 318 SB

1026 2564 227 (\(external event\)) 227 SB

576 2646 293 (branch_instructions ) 293 SB

1026 2646 461 (Branch instructions, conditional,) 461 SB

1626 2646 72 (4096) 72 SB

1814 2646 90 (65536) 90 SB

2076 2646 18 (0) 18 SB

1026 2687 502 (unconditional, any JSR or HW-REI) 502 SB

576 2769 93 (cycles) 93 SB

1026 2769 100 (Cycles) 100 SB

1626 2769 72 (4096) 72 SB

1814 2769 90 (65536) 90 SB

2076 2769 18 (0) 18 SB

576 2851 94 (issues) 94 SB

1026 2851 357 (Equal to filled issue slots) 357 SB

1626 2851 72 (8192) 72 SB

1814 2851 108 (131072) 108 SB

2076 2851 18 (0) 18 SB

1026 2892 291 (\(two slots per cycle\)) 291 SB

576 2974 254 (load_instructions ) 254 SB

1026 2974 247 (Load instructions) 247 SB

1626 2974 72 (4096) 72 SB

1814 2974 90 (65536) 90 SB

2076 2974 18 (0) 18 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (12) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 17 17

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 245 175 (non_issues ) 175 SB

1026 245 316 (Equal to unfilled issue) 316 SB

1626 245 72 (8192) 72 SB

1814 245 108 (131072) 108 SB

2076 245 18 (0) 18 SB

1026 286 368 (slots \(two slots per cycle\)) 368 SB

576 368 234 (palcode_cycles ) 234 SB

1026 368 375 (Cycles while executing in ) 375 SB

1626 368 72 (4096) 72 SB

1814 368 90 (65536) 90 SB

2076 368 18 (0) 18 SB

1026 409 223 (PALcode mode) 223 SB

576 491 184 (pipeline_dry ) 184 SB

1026 491 426 (Cycles where nothing issued ) 426 SB

1626 491 72 (4096) 72 SB

1814 491 90 (65536) 90 SB

2076 491 18 (0) 18 SB

1026 532 480 (due to lack of valid I-stream data;) 480 SB

1026 573 369 (causes include icache fill,) 369 SB

1026 614 491 (mispredictions branch delay slots,) 491 SB

1026 655 451 (and pipeline drain for exception) 451 SB

576 737 229 (pipeline_frozen ) 229 SB

1026 737 417 (Cycles where nothing issued) 417 SB

1626 737 72 (4096) 72 SB

1814 737 90 (65536) 90 SB

2076 737 18 (0) 18 SB

1026 778 338 (due to resource conflict) 338 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

576 899 145 (Table 2) 145 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

1626 951 336 (Interrupt Frequencies) 336 SB

576 992 196 (Event Name ) 196 SB

1026 992 180 (Description) 180 SB

1626 992 73 (High) 73 SB

1814 992 66 (Low) 66 SB

2076 992 144 (Counters) 144 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1074 236 (bcache_misses ) 236 SB

1026 1074 443 (Backup cache \(which is on the) 443 SB

1626 1074 54 (256) 54 SB

1814 1074 72 (4096) 72 SB

2076 1074 18 (1) 18 SB

576 1115 178 (\(bc_misses\)) 178 SB

1026 1115 320 (system board\) misses) 320 SB

1026 1156 227 (\(external event\)) 227 SB

576 1238 293 (branch_mispredicts ) 293 SB

1026 1238 477 (Branch mispredictions, including ) 477 SB

1626 1238 54 (256) 54 SB

1814 1238 72 (4096) 72 SB

2076 1238 18 (1) 18 SB

576 1279 188 (\(mispredicts\)) 188 SB

1026 1279 491 (branch mispredictions and JSR or) 491 SB

1026 1320 455 (HW_REI branch mispredictions) 455 SB

576 1402 236 (dcache_misses ) 236 SB

1026 1402 278 (Data cache misses) 278 SB

1626 1402 54 (256) 54 SB

1814 1402 72 (4096) 72 SB

2076 1402 18 (1) 18 SB

576 1484 276 (dual_issue_cycles ) 276 SB

1026 1484 433 (Cycles where two instructions) 433 SB

1626 1484 54 (256) 54 SB

1814 1484 72 (4096) 72 SB

2076 1484 18 (0) 18 SB

576 1525 134 (\(2issues\)) 134 SB

1026 1525 95 (issued) 95 SB

576 1607 240 (float_operations ) 240 SB

1026 1607 499 (Floating-point operate instructions,) 499 SB

1626 1607 54 (256) 54 SB

1814 1607 72 (4096) 72 SB

2076 1607 18 (1) 18 SB

1026 1648 494 (not including floating-point branch,) 494 SB

1026 1689 365 (load, or store instructions) 365 SB

576 1771 225 (icache_misses ) 225 SB

1026 1771 360 (Instruction cache misses) 360 SB

1626 1771 54 (256) 54 SB

1814 1771 72 (4096) 72 SB

2076 1771 18 (0) 18 SB

576 1853 269 (integer_operations) 269 SB

1026 1853 404 (Integer operate instructions,) 404 SB

1626 1853 54 (256) 54 SB

1814 1853 72 (4096) 72 SB

2076 1853 18 (1) 18 SB

1026 1894 428 (including LDA and LDAH with) 428 SB

1026 1935 498 (destination other than R31, but not) 498 SB

1026 1976 401 (including other load or store) 401 SB

1026 2017 166 (instructions) 166 SB

576 2099 266 (store_instructions ) 266 SB

1026 2099 253 (Store instructions) 253 SB

1626 2099 54 (256) 54 SB

1814 2099 72 (4096) 72 SB

2076 2099 18 (1) 18 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 2222 93 (Note: ) 93 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

669 2222 1504 (You cannot abbreviate an event's name. You must specify the event's full name in your command string.) 1504 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

576 2426 1117 (Events available on EV5 systems \(sorted alphabetically\)) 1117 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

576 2530 145 (Table 3) 145 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

1776 2582 336 (Interrupt Frequencies) 336 SB

576 2623 187 (Event Name) 187 SB

1026 2623 180 (Description) 180 SB

1776 2623 73 (High) 73 SB

1926 2623 66 (Low) 66 SB

2226 2623 144 (Counters) 144 SB

576 2664 176 (\(Nickname\)) 176 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2746 236 (bcache_misses ) 236 SB

1026 2746 660 (Backup cache \(which is on the system board\)) 660 SB

1776 2746 54 (256) 54 SB

1926 2746 90 (16384) 90 SB

2226 2746 18 (2) 18 SB

576 2787 324 (\(bc_misses, bc_miss, ) 324 SB

1026 2787 103 (misses) 103 SB

576 2828 114 (bcmiss\)) 114 SB

576 2910 184 (bcache_hits ) 184 SB

1026 2910 581 (Successful references to backup cache ) 581 SB

1776 2910 54 (256) 54 SB

1926 2910 90 (65536) 90 SB

2226 2910 18 (1) 18 SB

576 2951 126 (\(bc_hits\)) 126 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (13) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%Page: 18 18

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 204 234 (bcache_victims ) 234 SB

1026 204 317 (Backup cache victims) 317 SB

1776 204 54 (256) 54 SB

1926 204 90 (65536) 90 SB

2226 204 18 (1) 18 SB

576 245 329 (\(bc_victims, bc_victim,) 329 SB

576 286 294 (bcvictim, bcvic, bcv\)) 294 SB

576 368 293 (branch_instructions ) 293 SB

1026 368 532 (Any branch instructions, conditional, ) 532 SB

1776 368 54 (256) 54 SB

1926 368 90 (65536) 90 SB

2226 368 18 (1) 18 SB

576 409 361 (\(branch_insts, branches\)) 361 SB

1026 409 502 (unconditional, any JSR or HW-REI) 502 SB

1776 409 464 (Do not use with PC_mispredicts) 464 SB

1776 450 322 (or branch_mispredicts) 322 SB

576 532 293 (branch_mispredicts ) 293 SB

1026 532 577 (Branch mispredictions, including branch) 577 SB

1776 532 54 (256) 54 SB

1926 532 90 (16384) 90 SB

2226 532 18 (2) 18 SB

576 573 419 (\(br_mispredicts, mispredicts\)) 419 SB

1026 573 621 (mispredictions and JSR or HW-REI branch) 621 SB

1026 614 209 (mispredictions) 209 SB

576 696 317 (conditional_branches ) 317 SB

1026 696 446 (Conditional branch instructions) 446 SB

1776 696 54 (256) 54 SB

1926 696 90 (65536) 90 SB

2226 696 18 (1) 18 SB

576 737 253 (\(cond_branches, ) 253 SB

1776 737 424 (Requires branch_mispredicts) 424 SB

576 778 163 (cbranches\)) 163 SB

576 860 93 (cycles) 93 SB

1026 860 100 (Cycles) 100 SB

1776 860 54 (256) 54 SB

1926 860 99 (65536 ) 99 SB

2226 860 27 (0 ) 27 SB

1776 901 54 (256) 54 SB

1926 901 99 (16384 ) 99 SB

2226 901 18 (2) 18 SB

576 983 272 (dcache_accesses ) 272 SB

1026 983 314 (Data cache accesses) 314 SB

1776 983 54 (256) 54 SB

1926 983 90 (65536) 90 SB

2226 983 18 (1) 18 SB

576 1024 335 (\(dc_accesses, dc_acc,) 335 SB

576 1065 98 (dcacc\)) 98 SB

576 1147 236 (dcache_misses ) 236 SB

1026 1147 278 (Data cache misses) 278 SB

1776 1147 54 (256) 54 SB

1926 1147 90 (16384) 90 SB

2226 1147 18 (2) 18 SB

576 1188 315 (\(dc_misses, dc_miss,) 315 SB

576 1229 114 (dcmiss\)) 114 SB

576 1311 175 (dtb_misses ) 175 SB

1026 1311 432 (Data translation buffer misses) 432 SB

1776 1311 54 (256) 54 SB

1926 1311 90 (16384) 90 SB

2226 1311 18 (2) 18 SB

576 1352 153 (\(dtb_miss\)) 153 SB

576 1434 267 (dual_issue_cycles) 267 SB

1026 1434 537 (Cycles where two instructions issued) 537 SB

1776 1434 54 (256) 54 SB

1926 1434 90 (65536) 90 SB

2226 1434 18 (1) 18 SB

576 1475 325 (\(dual_issues, 2issues\)) 325 SB

576 1557 116 (external) 116 SB

1026 1557 646 (External event supplied by pin \(turned off on ) 646 SB

1776 1557 54 (256) 54 SB

1926 1557 90 (16384) 90 SB

2226 1557 18 (2) 18 SB

1026 1598 661 (ADU, possibly connected to B-cache on other) 661 SB

1026 1639 151 (machines\)) 151 SB

576 1721 240 (float_operations ) 240 SB

1026 1721 605 (Floating-pointing operate instructions, not ) 605 SB

1776 1721 54 (256) 54 SB

1926 1721 90 (65536) 90 SB

2226 1721 18 (1) 18 SB

576 1762 286 (\(float_ops, floatops\)) 286 SB

1026 1762 639 (including floating-point branch, load, or store) 639 SB

1026 1803 166 (instructions) 166 SB

576 1885 252 (icache_accesses) 252 SB

876 1885 9 ( ) 9 SB

1026 1885 396 (Instruction cache accesses) 396 SB

1776 1885 54 (256) 54 SB

1926 1885 90 (65536) 90 SB

2226 1885 18 (1) 18 SB

576 1926 313 (\(ic_accesses, ic_acc,) 313 SB

576 1967 87 (icacc\)) 87 SB

576 2049 225 (icache_misses ) 225 SB

1026 2049 360 (Instruction cache misses) 360 SB

1776 2049 54 (256) 54 SB

1926 2049 90 (16384) 90 SB

2226 2049 18 (2) 18 SB

576 2090 315 (\(dc_misses, dc_miss,) 315 SB

576 2131 114 (dcmiss\)) 114 SB

576 2213 269 (integer_operations) 269 SB

1026 2213 677 (Integer operate instructions, including LDA and) 677 SB

1776 2213 54 (256) 54 SB

1926 2213 90 (65536) 90 SB

2226 2213 18 (1) 18 SB

576 2254 232 (\(int_ops, intops\)) 232 SB

1026 2254 662 (LDAH with destination other than R31, but not) 662 SB

1026 2295 576 (including other load or store instructions) 576 SB

576 2377 155 (itb_misses) 155 SB

1026 2377 514 (Instruction translation buffer misses) 514 SB

1776 2377 54 (256) 54 SB

1926 2377 90 (16384) 90 SB

2226 2377 18 (2) 18 SB

576 2459 284 (jsr_ret_instructions ) 284 SB

1026 2459 377 (Jump-to-subroutine-return) 377 SB

1776 2459 54 (256) 54 SB

1926 2459 90 (65536) 90 SB

2226 2459 18 (1) 18 SB

576 2500 130 (\(jsr_rets\)) 130 SB

1776 2500 370 (Requires PC_mispredicts) 370 SB

576 2582 167 (ldu_replays) 167 SB

1026 2582 670 (If a load misses, it may cause a load-miss-and) 670 SB

1776 2582 54 (256) 54 SB

1926 2582 90 (16384) 90 SB

2226 2582 18 (2) 18 SB

1026 2623 667 (use replay trap. This happens if the instruction) 667 SB

1026 2664 660 (using the result of the load issues in the exact) 660 SB

1026 2705 614 (cycle when the load data would have been) 614 SB

1026 2746 615 (available, had it hit. Because it missed, the) 615 SB

1026 2787 660 (using instruction has to be killed \(trapped\). By) 660 SB

1026 2828 691 (the time the Ibox re-issues the using instruction,) 691 SB

1026 2869 647 (the data is just arriving from the second-level) 647 SB

1026 2910 658 (cache \(in the fastest case\). This event counts) 658 SB

1026 2951 269 (those replay traps.) 269 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (14) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%Page: 19 19

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 204 254 (load_instructions ) 254 SB

1026 204 247 (Load instructions) 247 SB

1776 204 54 (256) 54 SB

1926 204 90 (65536) 90 SB

2226 204 18 (1) 18 SB

576 245 100 (\(loads\)) 100 SB

576 327 174 (load_locked) 174 SB

1026 327 353 (Load-locked instructions) 353 SB

1776 327 54 (256) 54 SB

1926 327 90 (16384) 90 SB

2226 327 18 (2) 18 SB

576 409 321 (loads_merged_in_maf) 321 SB

1026 409 585 (Each time a load-miss is merged with an) 585 SB

1776 409 54 (256) 54 SB

1926 409 90 (16384) 90 SB

2226 409 18 (2) 18 SB

576 450 235 (\(loads_merged, ) 235 SB

1026 450 558 (existing load-miss, this event counts it.) 558 SB

576 491 217 (merged_loads\)) 217 SB

576 573 154 (long_stalls) 154 SB

1026 573 548 (>12 cycles with no instructions issued) 548 SB

1776 573 54 (256) 54 SB

1926 573 90 (16384) 90 SB

2226 573 18 (2) 18 SB

576 655 184 (mem_barrier) 184 SB

1026 655 396 (Memory barrier instructions) 396 SB

1776 655 54 (256) 54 SB

1926 655 90 (16384) 90 SB

2226 655 18 (2) 18 SB

576 737 230 (PC_mispredicts) 230 SB

1026 737 264 (PC mispredictions) 264 SB

1776 737 54 (256) 54 SB

1926 737 90 (16384) 90 SB

2226 737 18 (2) 18 SB

576 819 175 (pipeline_dry) 175 SB

1026 819 620 (Cycles where nothing issued due to lack of) 620 SB

1776 819 54 (256) 54 SB

1926 819 90 (65536) 90 SB

2226 819 18 (1) 18 SB

576 860 147 (\(dry_pipe\)) 147 SB

1026 860 655 (valid I-stream data; causes include icache fill,) 655 SB

1026 901 563 (mispredictions, branch delay slots, and) 563 SB

1026 942 388 (pipeline drain for exception) 388 SB

576 1024 220 (pipeline_frozen) 220 SB

1026 1024 653 (Cycles where nothing issued due to resource) 653 SB

1776 1024 72 (4096) 72 SB

1926 1024 90 (65536) 90 SB

2226 1024 18 (0) 18 SB

1026 1065 102 (conflict) 102 SB

576 1147 278 (quad_issue_cycles) 278 SB

1026 1147 542 (Cycles where four instructions issued) 542 SB

1776 1147 54 (256) 54 SB

1926 1147 90 (65536) 90 SB

2226 1147 18 (1) 18 SB

576 1188 336 (\(quad_issues, 4issues\)) 336 SB

576 1270 163 (replay_trap) 163 SB

1026 1270 184 (Replay traps) 184 SB

1776 1270 54 (256) 54 SB

1926 1270 90 (65536) 90 SB

2226 1270 18 (1) 18 SB

576 1352 271 (scache_accesses ) 271 SB

1026 1352 662 (Secondary on-chip cache accesses, which is ) 662 SB

1776 1352 54 (256) 54 SB

1926 1352 90 (65536) 90 SB

2226 1352 18 (1) 18 SB

576 1393 333 (\(sc_accesses, sc_acc,) 333 SB

1026 1393 509 (equal to dcache and icache misses) 509 SB

576 1434 97 (scacc\)) 97 SB

576 1516 235 (scache_misses ) 235 SB

1026 1516 491 (Secondary on-chip cache misses ) 491 SB

1776 1516 54 (256) 54 SB

1926 1516 90 (16384) 90 SB

2226 1516 18 (2) 18 SB

576 1557 313 (\(sc_misses, sc_miss,) 313 SB

576 1598 113 (scmiss\)) 113 SB

576 1680 214 (scache_reads ) 214 SB

1026 1680 505 (Reads to secondary on-chip cache) 505 SB

1626 1680 9 ( ) 9 SB

1776 1680 54 (256) 54 SB

1926 1680 90 (65536) 90 SB

2226 1680 18 (1) 18 SB

576 1721 290 (\(sc_reads, screads\)) 290 SB

576 1803 318 (scache_read_misses ) 318 SB

1026 1803 600 (Read misses to secondary on-chip cache) 600 SB

1776 1803 54 (256) 54 SB

1926 1803 90 (16384) 90 SB

2226 1803 18 (2) 18 SB

576 1844 335 (\(sc_rmisses, sc_rmiss,) 335 SB

576 1885 113 (scmiss\)) 113 SB

576 1967 310 (scache_shared_write) 310 SB

1026 1967 610 (Shared writes to secondary on-chip cache) 610 SB

1776 1967 54 (256) 54 SB

1926 1967 90 (16384) 90 SB

2226 1967 18 (2) 18 SB

576 2008 276 (\(sc_shared_writes,) 276 SB

576 2049 294 (scshs_writes, scsw\)) 294 SB

576 2131 224 (scache_victims) 224 SB

1026 2131 480 (Secondary on-chip cache victims) 480 SB

1776 2131 54 (256) 54 SB

1926 2131 90 (65536) 90 SB

2226 2131 18 (1) 18 SB

576 2213 201 (scache_write ) 201 SB

1026 2213 503 (Writes to secondary on-chip cache) 503 SB

1776 2213 54 (256) 54 SB

1926 2213 99 (16384 ) 99 SB

2226 2213 18 (2) 18 SB

576 2254 298 (\(sc_writes, scwrites\)) 298 SB

1926 2254 90 (65536) 90 SB

2226 2254 18 (1) 18 SB

576 2336 322 (scache_write_misses ) 322 SB

1026 2336 598 (Write misses to secondary on-chip cache) 598 SB

1776 2336 54 (256) 54 SB

1926 2336 90 (16384) 90 SB

2226 2336 18 (2) 18 SB

576 2377 361 (\(sc_wmisses, sc_wmiss,) 361 SB

576 2418 137 (scwmiss\)) 137 SB

576 2500 291 (single_issue_cycles) 291 SB

1026 2500 554 (Cycles where single instruction issued) 554 SB

1776 2500 54 (256) 54 SB

1926 2500 90 (65536) 90 SB

2226 2500 18 (1) 18 SB

576 2541 349 (\(single_issues, 1issues\)) 349 SB

576 2623 273 (split_issue_cycles ) 273 SB

1026 2623 682 (Some, but not all, instructions at the issue point) 682 SB

1776 2623 54 (256) 54 SB

1926 2623 90 (65536) 90 SB

2226 2623 18 (1) 18 SB

576 2664 192 (\(split_issues\)) 192 SB

1026 2664 666 (issue. If there are no floating-point instructions) 666 SB

1026 2705 657 (in the program, this is the cycles in which one) 657 SB

1026 2746 676 (instruction issued even though two instructions) 676 SB

1026 2787 185 (were slotted.) 185 SB

576 2869 266 (store_instructions ) 266 SB

1026 2869 253 (Store instructions) 253 SB

1776 2869 54 (256) 54 SB

1926 2869 90 (65536) 90 SB

2226 2869 18 (1) 18 SB

576 2910 112 (\(stores\)) 112 SB

576 2992 286 (system_invalidates ) 286 SB

1026 2992 273 (System invalidates) 273 SB

1776 2992 54 (256) 54 SB

1926 2992 90 (16384) 90 SB

2226 2992 18 (2) 18 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (15) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%Page: 20 20

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 204 327 (\(sys_invalids, sys_inv,) 327 SB

576 245 121 (sysinvs\)) 121 SB

576 327 332 (system_read_requests) 332 SB

1026 327 319 (System read requests) 319 SB

1776 327 54 (256) 54 SB

1926 327 90 (16384) 90 SB

2226 327 18 (1) 18 SB

576 409 258 (system_requests ) 258 SB

1026 409 245 (System requests) 245 SB

1776 409 54 (256) 54 SB

1926 409 90 (65536) 90 SB

2226 409 18 (1) 18 SB

576 450 287 (\(sys_reqs, sys_req,) 287 SB

576 491 242 (sysreqs, sysreq\)) 242 SB

576 573 276 (triple_issue_cycles) 276 SB

1026 573 560 (Cycles where three instructions issued) 560 SB

1776 573 54 (256) 54 SB

1926 573 90 (65536) 90 SB

2226 573 18 (1) 18 SB

576 614 334 (\(triple_issues, 3issues\)) 334 SB

576 696 297 (wb_maf_full_replays) 297 SB

1026 696 600 (When a load that will miss or any store is ) 600 SB

1776 696 54 (256) 54 SB

1926 696 90 (16384) 90 SB

2226 696 18 (2) 18 SB

1026 737 712 (issued it will need space in the Miss-Address-File) 712 SB

1026 778 665 (\(MAF\) or the write buffer. If there is not space,) 665 SB

1026 819 637 (the instruction is trapped \(replayed\), and the) 637 SB

1026 860 214 (event counted.) 214 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 983 84 (Note:) 84 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

660 983 1558 ( You cannot abbreviate an event's name. However, you can use the event's nickname, which is shorter than) 1558 SB

576 1024 306 (the event's full name.) 306 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

576 1152 531 (Interrupt Frequency Types) 531 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1229 1590 (Interrupt frequencies are equal to the number of events counted between interrupts. The larger) 1590 SB

576 1279 867 (the number of events, the lower the frequency, i.e., ) 867 SB

1443 1279 147 (IPROBE) 147 SB

1590 1279 592 ( is actually measuring the interrupt) 592 SB

576 1329 1508 (latency. Listed next are the interrupt frequency types you can use when specifying events.) 1508 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 1469 309 (Interrupt Frequency) 309 SB

1026 1469 185 (Explanation) 185 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1510 61 (high) 61 SB

1026 1510 1106 (Uses the highest interrupt frequency \(i.e., the smallest number of events per ) 1106 SB

1026 1551 810 (interrupt\) defined for that event on the assigned counter.) 810 SB

576 1592 49 (low) 49 SB

1026 1592 1072 (Uses the lowest interrupt frequency \(i.e., the largest number of events per ) 1072 SB

1026 1633 819 (interrupt\) defined for that event on the assigned  counter.) 819 SB

576 1674 97 (default) 97 SB

1026 1674 1131 (Equal to the most commonly used interrupt frequency for the event. Currently, ) 1131 SB

1026 1715 168 (always low.) 168 SB

576 1756 18 (n) 18 SB

1026 1756 952 (Uses the specified interrupt frequency, which should be equal to 2) 952 SB

1978 1743 17 (x) 17 SB

1995 1756 159 (. If n is not ) 159 SB

1026 1797 142 (equal to 2) 142 SB

1168 1784 17 (x) 17 SB

1185 1797 512 (, IPROBE adjusts n to the closest 2) 512 SB

1697 1784 26 (x ) 26 SB

1723 1797 475 (value. Adjusted results generate ) 475 SB

1026 1838 169 (a message.) 169 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 1973 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 1974 1203 ( Remember, you must specify all options prior to specifying any events.) 1203 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 2094 560 (Using Counting) 560 SB

255 255 255 fC

/fm 256 def

1961 3 270 2088 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 2085 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2222 148 (You use ) 148 SB

724 2222 147 (IPROBE) 147 SB

871 2222 1223 ( in counting mode \(-method count or leave the option -method out of the) 1223 SB

576 2272 1581 (command string because counting is the default\) to examine different types of events during a) 1581 SB

576 2322 1638 (long running or homogeneous workload. You can also use counting mode to determine, based on) 1638 SB

576 2372 977 (the time stamp, when a particular event started occurring.) 977 SB

576 2448 1519 (Counting mode is also useful for comparing the characteristics of a workload between two) 1519 SB

576 2498 1556 (versions of software, e.g., operating systems, databases, and applications. When you use this) 1556 SB

576 2548 1598 (approach, sampling or histogramming often are used to examine the events that differ between) 1598 SB

576 2598 303 (software versions.) 303 SB

576 2674 1610 (Counting cycles measures the clock speed of the system you are running IPROBE on. Although) 1610 SB

576 2724 1636 (this feature is not very useful, it does provide you with a sanity check of the system's clock speed.) 1636 SB

576 2800 846 (The following example shows how you might use ) 846 SB

1422 2800 147 (IPROBE) 147 SB

1569 2800 653 ( to count the number of dcache_misses) 653 SB

576 2850 1534 (that occurred for a 5-minute measurement period. The larger the number of dcache_misses) 1534 SB

576 2900 1603 (shown, the larger the number of dcache_misses that occurred. Also, by default, IPROBE writes) 1603 SB

576 2950 405 (the output to the screen.) 405 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (16) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 21 21

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

0 0 0 fC

576 203 162 (Example:) 162 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 267 770 ($ iprobe -method count -duration 300 dcache_misses) 770 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 396 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 397 1287 ( You can always terminate before the time period ends by using <CTRL> C.) 1287 SB

576 473 1494 (Counting provides a quick way of trying to discover what kinds of events are happening.) 1494 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 593 569 (Using Sampling) 569 SB

255 255 255 fC

/fm 256 def

1961 3 270 587 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 584 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 721 1590 (You use sampling \(-method sample\) to produce code profiles based on time or based on any of) 1590 SB

576 771 1594 (the events the counters keep track of. For example, you can use sampling to find out where the) 1594 SB

576 821 1625 (system or a user's program spent time or to find out where high rates of instruction cache misses) 1625 SB

576 871 157 (occurred.) 157 SB

576 947 254 (In this mode\227) 254 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1019 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1023 352 (buffers are allocated,) 352 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1095 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1099 1052 (the interrupt service routine fills the buffers with samples, and) 1052 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1171 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1175 859 (IPROBE periodically writes the buffers out to disk.) 859 SB

576 1327 802 (The default contents of a sample are as follows:) 802 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1399 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1403 455 (PC \(64 bit on DEC OSF/1\)) 455 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1475 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1479 450 (PS \(64 bit on DEC OSF/1\)) 450 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1551 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1555 784 (PC32 \(32 bit on OpenVMS and Windows NT\)) 784 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1627 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1631 779 (PS32 \(32 bit on OpenVMS and Windows NT\)) 779 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1703 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1707 392 (pid \(process ID; 32 bit\)) 392 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1779 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1783 470 (ctr \(counter number; 32 bit\)) 470 SB

576 1859 1594 (You can change the default contents of the sample via the -collect and -nocollect options. Also) 1594 SB

576 1909 1073 (available, but not present by default, are the following contents:) 1073 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 1981 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 1985 211 (time \(32 bit\)) 211 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 595 3249 0 0 CB

576 2057 19 (\267) 19 SB

gr

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

651 2061 333 (pri \(priority; 32 bit\)) 333 SB

576 2213 1584 (The performance counter interrupt service routine operates at high IPLs, so almost everything) 1584 SB

576 2263 1505 (happening on the system is shown. PALcode cannot be interrupted; thus, there will be no) 1505 SB

576 2313 1605 (samples in PALcode. However, you can see where heavy PALcode calls take place by sampling) 1605 SB

576 2363 1624 (based on PALcode usage. The PALcode call preceding the sampled PC will be the PALcode call) 1624 SB

576 2413 1633 (where time is being spent. Because the interrupt may not have occurred right when the threshold) 1633 SB

576 2463 711 (was reached, look back a few instructions.) 711 SB

576 2539 1619 (The PC in the sample may not be the PC that caused the threshold to be reached. However, over) 1619 SB

576 2589 1567 (time you can expect that PC values having a large number of samples are associated with the) 1567 SB

576 2639 1088 (event being counted, i.e., they are nearby in the instruction flow.) 1088 SB

576 2715 1631 (The following example shows how you might run IPROBE in sampling mode \(-method sample\).) 1631 SB

576 2765 1642 (When you run IPROBE in sampling mode, a header prints and sampling starts. Shown next is an) 1642 SB

576 2815 860 (example of an IPROBE sampling command string.) 860 SB

576 2891 162 (Example:) 162 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2955 946 ($ iprobe -method sample -output test.dat -duration 120 -delay 300) 946 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (17) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 22 22

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

0 0 0 fC

576 279 1645 (The output file in this example is test.dat. Counter 0 will, by default, count cycles \(uniform time\),) 1645 SB

576 329 1588 (and counter 1 will, by default, count external events. Sampling will occur for 2 minutes \(i.e., -) 1588 SB

576 379 1115 (duration 120\) after waiting 5 minutes before starting \(-delay 300\).) 1115 SB

576 455 1380 (When sampling finishes, IPROBE prints additional lines similar to the following:) 1380 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

726 560 218 (Buffers written:) 218 SB

1326 560 18 (5) 18 SB

726 601 210 (Partial buffers:) 210 SB

1326 601 18 (1) 18 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 730 1607 (This information describes how well sampling went and is useful for diagnosing problems with) 1607 SB

576 780 167 (sampling.) 167 SB

576 856 1642 (You can then use IPREDUCE to reduce the data in a variety of ways. See the IPREDUCE section) 1642 SB

576 906 1519 (for details. You might also want to do sampling and create a histogram \(explained in next) 1519 SB

576 956 466 (section\) by post-processing.) 466 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1076 832 (Generating Histograms) 832 SB

255 255 255 fC

/fm 256 def

1961 3 270 1070 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1067 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1204 1536 (You use IPROBE histogramming method to get a visual representation  of the frequency of) 1536 SB

576 1254 1619 (performance counter events. The counts are organized into cells or buckets representing a range) 1619 SB

576 1304 1574 (of categories of system operation. For example, histogramming by mode \(i.e., -method mode\)) 1574 SB

576 1354 1574 (provides a chart of event counts for each CPU mode. On OpenVMS, the "buckets," or modes,) 1574 SB

576 1404 1619 (would be kernel, exec, supervisor, user, interrupt, idle, and selected. On DEC OSF/1, the modes) 1619 SB

576 1454 1519 (are user, kernel, idle, and selected. On Windows NT, the modes are user, kernel, and idle.) 1519 SB

576 1530 1623 (If you were counting integer operations \(or any other counter event\), the resulting display would) 1623 SB

576 1580 235 (resemble this:) 235 SB

32 0 0 33 33 0 0 0 26 /Courier /font0 ANSIFont font

576 1674 1280 (CPU 0  kernel 1287  user 1778 exec 117 super 77 int 11 idle 8834) 1280 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1798 1627 (The interpretation of the above is as follows. For CPU 0, the most frequent occurrence of integer) 1627 SB

576 1848 1593 (operations was in idle mode with  8834 event interrupts. The next most frequent occurrence of) 1593 SB

576 1898 910 (the selected event was in user mode with 1778 events.) 910 SB

576 1974 1559 (To get a mode histogram like the previous example, the IPROBE command line would be as) 1559 SB

576 2024 134 (follows:) 134 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2129 308 (iprobe -method mode) 308 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2258 1559 (Address histogramming means counting events in cells representing  process virtual address) 1559 SB

576 2308 1594 (space. This collection method is where the ability to use the -pc_range switch to specify one or) 1594 SB

576 2358 1648 (more address ranges and the granularity is likely to be useful. The -pc_range switch allows you to) 1648 SB

576 2408 1584 (count the events that occur within the specified range of addresses instead of the entire virtual) 1584 SB

576 2458 1387 (address space. The granularity specification defines the size of the cells. Example:) 1387 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2563 1243 (iprobe -method address -pc_range 0xFFFFFC0000232000-0xFFFFFC0000480000.13) 1243 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2692 1633 (This is an address histogram collection command that you might use  to count events in /vmunix) 1633 SB

576 2742 1638 (space for DEC OSF/1. The .13 is the granularity specification, and the range preceding the dot is) 1638 SB

576 2792 1616 (a virtual address range that roughly corresponds with the resident addresses for the DEC OSF/1) 1616 SB

576 2842 1424 (kernel. The range is about 2.5 megabytes, about the equivalent of 260K instructions.) 1424 SB

576 2918 1628 (The granularity determines the subrange of the addresses to be represented by each bucket in the) 1628 SB

576 2968 1614 (output display. The resulting size of an individual cell will be 2 raised to the power given as the) 1614 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (18) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Courier

%%+ font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 23 23

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

0 0 0 fC

576 203 1631 (granularity. Because there is a virtual address for every byte, a granularity of zero would create a) 1631 SB

576 253 1218 (bucket representing the PC for every byte in the specified address range.) 1218 SB

576 329 1503 (You will normally want to use 2 as the minimum granularity because 4 bytes is the finest) 1503 SB

576 379 1606 (granularity of interest for address space containing Alpha instructions. Note that the number of) 1606 SB

576 429 1594 (buckets required is a direct function of the specified PC range and the granularity. If you try to) 1594 SB

576 479 1614 (collect from a very large address space with a very fine granularity, you may run out of memory) 1614 SB

576 529 960 (because IPROBE histogramming buffers become too big.) 960 SB

576 605 1593 (In the previous example, the granularity of 13 will display cells representing the address space) 1593 SB

576 655 80 (for 2) 80 SB

656 642 42 (13) 42 SB

698 655 671 ( bytes, or one 8K page of address space.) 671 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 775 803 (Running the Workload) 803 SB

255 255 255 fC

/fm 256 def

1961 3 270 769 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 766 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 903 1620 (If you want to isolate the work you want to examine, reduce the data you want to examine into a) 1620 SB

576 953 1506 (single process. For this reason, you may want to spawn a subprocess that runs the desired) 1506 SB

576 1003 168 (workload.) 168 SB

576 1079 1618 (You may choose to start the workload and let it get settled before beginning sampling. You may) 1618 SB

576 1129 1634 (choose to start sampling first and then run a short-running workload. Whatever you choose to do) 1634 SB

576 1179 1553 (depends on the type of workload, i.e., how easily the workload can be isolated, how long the) 1553 SB

576 1229 764 (workload runs, and your personal preference.) 764 SB

576 1305 1517 (If you know how long IPROBE will run, you might want to spawn IPROBE. However, we) 1517 SB

576 1355 1575 (suggest you spawn the workload because you can then terminate IPROBE when the workload) 1575 SB

576 1405 88 (ends.) 88 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 1481 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 1482 1412 ( If you decide to terminate IPROBE prematurely after IPROBE has entered its main) 1412 SB

576 1532 1533 (operation loop, do so by issuing a <CTRL>C or <CTRL>Y. <CTRL>C and <CTRL>Y are) 1533 SB

576 1582 1401 (passed to all spawned processes and will cause the spawned processes to terminate.) 1401 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1821 3074 290 (Using IPROBE) 290 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (19) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 24 24

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 205 382 (Using ) 382 SB

658 205 256 (REP) 256 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 664 1636 (To reduce the data later, you run REP. REP allows you to obtain the loaded addresses of the code) 1636 SB

576 714 354 (you are interested in.) 354 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 834 632 (Command Syntax) 632 SB

255 255 255 fC

/fm 256 def

1961 3 270 828 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 825 B

1 F

n

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 950 854 (rep [-o output] [-p pid] [-l] [-k -e -r -u -h -i -f -n] [image name]) 854 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1044 718 (The switches available for you to use with ) 718 SB

1294 1044 76 (REP) 76 SB

1370 1044 254 ( are as follows:) 254 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 1108 106 (Switch) 106 SB

876 1108 185 (Explanation) 185 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1149 29 (-e) 29 SB

876 1149 771 (synonymous with -k; but not available on DEC OSF/1) 771 SB

576 1190 20 (-f) 20 SB

876 1190 923 (takes input files specified by -i and resolves the address spaces) 923 SB

576 1231 29 (-h) 29 SB

876 1231 375 (tells your how to use REP) 375 SB

576 1272 18 (-i) 18 SB

876 1272 921 (allows you to specify input files that are to be taken into account) 921 SB

576 1313 28 (-k) 28 SB

876 1313 1173 (reads the OpenVMS executive images; reads the kernel on DEC OSF/1 \(vmunix\)) 1173 SB

576 1354 18 (-l) 18 SB

876 1354 1094 (turns on logging and prints the name of each image or symbol table file read) 1094 SB

576 1395 38 (-m) 38 SB

876 1395 1081 (sets the PME bit for the process started by REP. Valid on DEC OSF/1 only) 1081 SB

576 1436 29 (-n) 29 SB

876 1436 309 (suppresses resolving) 309 SB

576 1477 29 (-o) 29 SB

876 1477 764 (specifies an output file; default is addresses.resolved) 764 SB

576 1518 29 (-p) 29 SB

876 1518 1190 (allows you to specify a process id \(PID\); the address space of that process is read) 1190 SB

576 1559 22 (-r) 22 SB

876 1559 967 (reads the list of images installed /RESIDENT on OpenVMS system) 967 SB

576 1600 29 (-u) 29 SB

876 1600 1340 (reads user address space; use with -p or specify an image name; if -k not specified, only the ) 1340 SB

876 1641 268 (user space is read) 268 SB

576 1682 178 (image name) 178 SB

876 1682 1062 (activates this image and reads the address space for the created process) 1062 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 1764 93 (Note: ) 93 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

669 1764 1490 (The image name and command arguments must be specified last \(i.e., at the end of the command line\).) 1490 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1861 480 (Running REP) 480 SB

255 255 255 fC

/fm 256 def

1961 3 270 1855 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1852 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1989 1621 (If you issue REP with no arguments, REP reads only the kernel. If you issue REP with an image) 1621 SB

576 2039 1627 (name and no other arguments, REP reads the kernel and the specified image name \(user address) 1627 SB

576 2089 937 (space\). Here is how some of the other arguments work\226) 937 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2153 47 (rep) 47 SB

1026 2153 539 (Reads only the kernel address space) 539 SB

576 2194 84 (rep -k) 84 SB

1026 2194 539 (Reads only the kernel address space) 539 SB

576 2235 201 (rep -u foo.exe) 201 SB

1026 2235 1113 (Reads only the user address space of the process running the image foo.exe) 1113 SB

576 2276 163 (rep foo.exe) 163 SB

1026 2276 1107 (Reads the kernel address space and the user address space of the process ) 1107 SB

1026 2317 375 (running the image foo.exe) 375 SB

576 2358 166 (rep -p 1234) 166 SB

1026 2358 1179 (Reads the kernel address space and the user address space of the process 1234) 1179 SB

576 2399 204 (rep -u -p 1234) 204 SB

1026 2399 810 (Reads only the user address space of the process 1234) 810 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2493 1650 (Under DEC OSF/1, if you pass the process id to REP, REP finds the image name and tries to look) 1650 SB

576 2543 1636 (for that image location using the environment path variable for the account from where REP was) 1636 SB

576 2593 1617 (invoked. Presently, this might pose a problem where multiple images exist with the same name.) 1617 SB

576 2710 1639 (Under DEC OSF/1, you should specify an image name and the arguments for running the image.) 1639 SB

576 2760 1553 (REP first checks to see if the image is a static executable or a dynamically shared one. If the) 1553 SB

576 2810 1616 (image is a static executable, REP will find out the address information without actually running) 1616 SB

576 2860 1527 (the image. Otherwise, REP will run the image, trap the image exit, and read all the loaded) 1527 SB

576 2910 1644 (address information before the image goes away. Specifying an image name is the best way to get) 1644 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1896 3074 215 (Using REP) 215 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (20) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 25 25

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

0 0 0 fC

576 203 1506 (the transient address information for the image. We recommend that you use it to run the) 1506 SB

576 253 411 (workload. For example\226) 411 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 317 358 (rep foo -a -c out.garbage) 358 SB

1176 317 932 (REP runs foo with the specified command arguments, reads the ) 932 SB

1176 358 984 (kernel and user address spaces, resolves them, and then produces ) 984 SB

1176 399 285 (addresses.resolved) 285 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 493 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 494 1443 ( In the previous example, the arguments -a and -c are treated as arguments to foo, the) 1443 SB

576 544 1609 (executable. Any arguments following the executable are treated as arguments to the executable.) 1609 SB

576 620 1637 (Under OpenVMS, the specified image is loaded in a suspended process. The address information) 1637 SB

576 670 1515 (on OpenVMS is static, so no run is necessary. The address data is read, and the process is) 1515 SB

576 720 1610 (terminated. Because no run is done, no PME bit setting is needed. Run the image separately for) 1610 SB

576 770 404 (workload measurement.) 404 SB

576 846 483 (If you want to see what files ) 483 SB

1059 846 76 (REP) 76 SB

1135 846 573 ( is using, run REP and specify an ) 573 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1708 846 24 (-l) 24 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1732 846 165 ( qualifier.) 165 SB

576 922 683 (The following is an example of running ) 683 SB

1259 922 76 (REP) 76 SB

1335 922 729 ( without and with a log, respectively, on an) 729 SB

576 972 403 (OpenVMS system with ) 403 SB

979 972 76 (REP) 76 SB

1055 972 826 ( previously defined as the foreign command, rep.) 826 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1077 74 ($ rep) 74 SB

576 1118 314 (Reading exec images) 314 SB

576 1159 548 (Reading images installed /RESIDENT) 548 SB

576 1200 305 (Resolving addresses) 305 SB

576 1241 544 (Writing output file addresses.resolved) 544 SB

576 1282 18 ($) 18 SB

576 1364 101 ($ rep -l) 101 SB

576 1405 314 (Reading exec images) 314 SB

726 1446 950 (Reading file SYS$COMMON:[SYS$LDR]SYS$EXDRIVER.EXE;1) 950 SB

726 1487 948 (Reading file SYS$COMMON:[SYS$LDR]SYS$FXDRIVER.EXE;1) 948 SB

726 1528 946 (Reading file SYS$COMMON:[SYS$LDR]SYS$FTDRIVER.EXE;1) 946 SB

1176 1569 9 (.) 9 SB

1176 1610 9 (.) 9 SB

576 1651 9 ( ) 9 SB

1176 1651 9 (.) 9 SB

726 1692 1043 (Reading file SYS$COMMON:[SYSLIB]SYS$PUBLIC_VECTORS.EXE;1) 1043 SB

576 1733 548 (Reading images installed /RESIDENT) 548 SB

726 1774 1208 (Reading file LSR1$DKA300:<SYS4D.SYSCOMMON.SYSLIB>DISMNTSHR.EXE;1) 1208 SB

726 1815 1162 (Reading file LSR1$DKA300:<SYS4D.SYSCOMMON.SYSLIB>INIT$SHR.EXE;1) 1162 SB

1176 1856 9 (.) 9 SB

1176 1897 9 (.) 9 SB

1176 1938 9 (.) 9 SB

726 1979 1203 (Reading file LSR1$DKA300:<SYS4D.SYSCOMMON.SYSLIB>MOUNTSHR.EXE;1) 1203 SB

576 2020 270 (Resolving address) 270 SB

576 2061 544 (Writing output file addresses.resolved) 544 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 2114 108 (Note: ) 108 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

684 2115 1442 (Although not shown in the previous examples, global sections, if they exist, are listed) 1442 SB

576 2165 1445 (separately on the list of installed images; thus, the image may be listed several times. ) 1445 SB

2021 2165 76 (REP) 76 SB

576 2215 1639 (appends the global section index to the image name so that there will be no ambiguity among the) 1639 SB

576 2265 985 (various global sections in an image installed /RESIDENT.) 985 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 2366 470 (OpenVMS Kernel) 470 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2466 319 (Under OpenVMS, ) 319 SB

895 2466 76 (REP) 76 SB

971 2466 1189 ( reads the executive images and any images installed /RESIDENT and) 1189 SB

576 2516 1571 (finds all symbols that refer to code entry points and determines their virtual addresses. It also) 1571 SB

576 2566 1537 (looks for an STB \(symbol table\) file in the same location as the image and reads that if it is) 1537 SB

576 2616 1590 (found. Because the possibility of a mismatch between the STB file and the image exists, if any) 1590 SB

576 2666 1649 (symbol definition in the STB file does match the value from the image, the STB file is abandoned) 1649 SB

576 2716 612 (and no symbols from it will be used.) 612 SB

576 2792 76 (REP) 76 SB

652 2792 1521 ( reports both the dispatching address and the code start address. For vectored entry points,) 1521 SB

576 2842 1600 (the address reported is the address of the actual start of the code after being dispatched, not the) 1600 SB

576 2892 1585 (address of the dispatching code. If the appropriate image has a valid STB file, another routine) 1585 SB

576 2942 1484 (maps to the same starting address. For example, SYS$QIOW from the vectored entry in) 1484 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1896 3074 215 (Using REP) 215 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (21) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 26 26

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

0 0 0 fC

576 203 1560 (SYS$BASE_IMAGE maps to EXE$QIOW in IO_ROUTINES, and EXE$QIOW is found in) 1560 SB

576 253 368 (IO_ROUTINES.STB.) 368 SB

576 329 1606 (If there is no valid STB file, the vectored entry will still be present so that there will be a useful) 1606 SB

576 379 530 (starting address for the routine.) 530 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 480 502 (DEC OSF/1 Kernel) 502 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 568 571 (Under DEC OSF/1, REP reads vmunix.) 571 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 646 346 (Windows NT) 346 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 746 1546 (Under Windows NT, the virtual addresses of the specified image are mapped. REP does not) 1546 SB

576 796 389 (actually run the image.) 389 SB

576 872 854 (The address information on Windows NT is static.) 854 SB

32 0 0 50 50 0 0 0 47 /Helvetica-Bold /font9 ANSIFont font

576 973 938 (Known Restrictions under Windows NT) 938 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1065 1450 (The following list shows the known restrictions for running REP under Windows NT.) 1450 SB

576 1141 32 (1.) 32 SB

651 1141 1513 (REP provides exported names only for Windows-provided dynamic-link libraries \(DLLs\).) 1513 SB

651 1191 907 (Internal subroutines within the DLLs do not show up.) 907 SB

576 1267 32 (2.) 32 SB

651 1267 1509 (REP provides entry points for main images and user-defined DLLs only if they are linked) 1509 SB

651 1317 685 (with one or the following debug options:) 685 SB

726 1393 171 (debug:full) 171 SB

726 1469 223 (debug:partial) 223 SB

726 1545 256 (debug:minimal) 256 SB

651 1621 1296 (Also, using debugtype:coff rather than debugtype:codeview is recommended.) 1296 SB

576 1697 32 (3.) 32 SB

651 1697 1559 (If an image is built with COFF debug symbol tables, the debug symbol table may be stripped) 1559 SB

651 1747 1487 (from the image and placed into a separate debug symbol file using the rebase command.) 1487 SB

576 1823 32 (4.) 32 SB

651 1823 1542 (System images and drivers are stripped of all symbols. Read-entry points for system images) 1542 SB

651 1873 1443 (will be provided only if separate debug \(.DBG\) files are available. The debug files are) 1443 SB

651 1923 978 (provided in the support directory of the Windows NT CD.) 978 SB

576 1999 32 (5.) 32 SB

651 1999 1510 (Debug files produced using the rebase command or provided with the SDK are located by) 1510 SB

651 2049 1571 (REP via an environment variable, SysDbgFilesDir. Click on Control Panel and select System) 1571 SB

651 2099 436 (to define SysDbgFilesDir.) 436 SB

576 2175 32 (6.) 32 SB

651 2175 1536 (Main images and user DLLs must be in the current directory or in a directory pointed to by) 1536 SB

651 2225 553 (the PATH environment variable.) 553 SB

576 2301 32 (7.) 32 SB

651 2301 757 (Line numbers option is not yet implemented.) 757 SB

576 2377 32 (8.) 32 SB

651 2377 1452 (REP generates a finished resolved addresses file. Support for generating or processing) 1452 SB

651 2427 700 (intermediate files is not yet implemented.) 700 SB

576 2503 32 (9.) 32 SB

651 2503 1416 (The default output file name for the Windows NT version of REP is address.res, not) 1416 SB

651 2553 1493 (addresses.resolved. The shortened filename allows you to look at the file with DOS Edit.) 1493 SB

576 2629 1616 (Also, the logging command line switch \(-l\) causes REP to print progress messages to STDERR.) 1616 SB

576 2679 876 (These messages are useful for diagnosing problems.) 876 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 2799 1267 (Determining the Loaded Addresses) 1267 SB

255 255 255 fC

/fm 256 def

1961 3 270 2793 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 2790 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2927 1609 (In addition to reading the address spaces, REP massages the data into a more canonical form, a) 1609 SB

576 2977 1483 (process called resolving. You can control this with the -n and -f switches. For example\226) 1483 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1896 3074 215 (Using REP) 215 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (22) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 27 27

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 204 312 (rep -o myfile.resolved) 312 SB

1026 204 1099 (Reads and resolves the kernel address space and produces myfile.resolved) 1099 SB

576 245 271 (rep -n -o myfile.dat) 271 SB

1026 245 1128 (Reads but does not resolve the kernel address space and produces myfile.dat) 1128 SB

576 286 516 (rep -f -o myfile.resolved -i myfile.dat) 516 SB

1176 286 718 (Resolves myfile.dat and produces myfile.resolved) 718 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 380 736 (Some ways you can use REP are as follows:) 736 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 485 385 (rep -u -n -o foo.dat foo.exe) 385 SB

1176 485 993 (Reads the address space of foo.exe but does no resolving; output is ) 993 SB

1176 526 99 (foo.dat) 99 SB

1176 567 871 (Now you can modify foo.dat to add some special information) 871 SB

576 608 454 (rep -i foo.dat -o vanilla.resolved) 454 SB

1176 608 927 (Reads the kernel address space, adds in foo.dat user data, and ) 927 SB

1176 649 564 (resolves and produces vanilla.resolved) 564 SB

1176 690 979 (Do your measurements, etc. and reboot with a new improved kernel) 979 SB

576 731 441 (rep -i foo.dat -o fancy.resolved) 441 SB

1176 731 927 (Reads the kernel address space, adds in foo.dat user data, and ) 927 SB

1176 772 551 (resolves and produces fancy.resolved) 551 SB

1176 813 499 (Do your measurements again, etc.) 499 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 907 1534 (Now you have two address files, vanilla.resolved and fancy.resolved that correspond to two) 1534 SB

576 957 1531 (different system states. You can use each of them for reducing your sample files. Both files) 1531 SB

576 1007 1642 (contain the information you added by hand to address the listing in foo.dat. You could do this via) 1642 SB

576 1057 1076 (standard REP runs, but you would have to make the edits twice.) 1076 SB

576 1133 1546 (The resolved file contains a list of routines with the starting and ending virtual addresses in) 1546 SB

576 1183 1335 (sorted order. Holes in the address space are filled in, and overlaps are resolved.) 1335 SB

576 1259 1554 (The ending addresses are calculated as the beginning of the next routine or as the end of the) 1554 SB

576 1309 1552 (image section, whichever is less. This file is in an unsorted overlapping format. This format) 1552 SB

576 1359 950 (could lead to correct attribution of a sample to a routine.) 950 SB

576 1435 1597 (You can edit the file addresses.resolved to further refine the address information in it or to add) 1597 SB

576 1485 955 (user space data. If you want to edit address data, use the ) 955 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1531 1485 37 (-n) 37 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1568 1485 626 ( switch, edit the output, and run REP) 626 SB

576 1535 270 (again using the ) 270 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

846 1535 27 (-f) 27 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

873 1535 374 ( switch. For example\226) 374 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1640 819 (rep [other switches] -n -o myfile.dat [command if desired]) 819 SB

576 1681 200 (edit myfile.dat) 200 SB

576 1722 516 (rep -i myfile.dat -f -o myfile.resolved) 516 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1851 1507 (Remember, user space is specific to a single process and you cannot put in more than one) 1507 SB

576 1901 1581 (process. Also, you do not have to sort the data, and you do not have to create non-overlapping) 1581 SB

576 1951 709 (areas; REP takes care of this later for you.) 709 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1896 3074 215 (Using REP) 215 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (23) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 28 28

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 805 382 (Using ) 382 SB

658 805 644 (IPREDUCE) 644 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1264 809 (To reduce IPROBE's data, you use the program ) 809 SB

1385 1264 203 (IPREDUCE) 203 SB

1588 1264 11 (.) 11 SB

576 1340 877 (Listed and described next are IPREDUCE's options.) 877 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1460 692 (IPREDUCE Options) 692 SB

255 255 255 fC

/fm 256 def

1961 3 270 1454 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1451 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1588 658 (The following table lists and describes ) 658 SB

1234 1588 203 (IPREDUCE) 203 SB

1437 1588 169 ('s options.) 169 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 1652 106 (Option) 106 SB

1026 1652 111 (Format) 111 SB

1476 1652 111 (Default) 111 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1693 122 (Input file) 122 SB

1026 1693 149 (-i filename) 149 SB

1476 1693 221 (-i pcsample.dat) 221 SB

576 1734 148 (Output file) 148 SB

1026 1734 160 (-o filename) 160 SB

1476 1734 225 (-o pcsample.rpt) 225 SB

576 1775 171 (Address file) 171 SB

1026 1775 160 (-a filename) 160 SB

1476 1775 323 (-a addresses.resolved) 323 SB

576 1816 212 (Report options) 212 SB

1026 1816 136 (-r options) 136 SB

1476 1816 49 (-r p) 49 SB

576 1857 222 (Display options) 222 SB

1026 1857 143 (-d options) 143 SB

1476 1857 320 (-d ipl,mode,pid,ctr,cpu) 320 SB

576 1898 204 (Counter mask) 204 SB

1026 1898 116 (-c mask) 116 SB

1476 1898 222 (all counter data) 222 SB

576 1939 154 (Event filter) 154 SB

1026 1939 181 (-event name) 181 SB

1476 1939 275 (all available events) 275 SB

576 1980 116 (PC filter) 116 SB

1026 1980 138 (-pc range) 138 SB

1476 1980 191 (all PC values) 191 SB

576 2021 119 (IPL filter) 119 SB

1026 2021 135 (-ipl range) 135 SB

1476 2021 194 (all IPL values) 194 SB

576 2062 151 (Mode filter) 151 SB

1026 2062 145 (-m modes) 145 SB

1476 2062 139 (all modes) 139 SB

576 2103 140 (CPU filter) 140 SB

1026 2103 156 (-cpu range) 156 SB

1476 2103 247 (all CPU numbers) 247 SB

576 2144 125 (PID filter) 125 SB

1026 2144 146 (-pid range) 146 SB

1476 2144 200 (all PID values) 200 SB

576 2185 251 (Cache block filter) 251 SB

1026 2185 138 (-cb range) 138 SB

1476 2185 232 (all cache blocks) 232 SB

576 2226 172 (Priority filter) 172 SB

1026 2226 139 (-pri range) 139 SB

1476 2226 164 (all priorities) 164 SB

576 2267 145 (Threshold) 145 SB

1026 2267 189 (-thresh value) 189 SB

1476 2267 129 (-thresh 1) 129 SB

576 2308 214 (Beginning time) 214 SB

1026 2308 108 (-tb time) 108 SB

1476 2308 150 (start of file) 150 SB

576 2349 171 (Ending time) 171 SB

1026 2349 108 (-te time) 108 SB

1476 2349 140 (end of file) 140 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2443 1552 (The profile report is broken up into separate reports for each event in the data file. You may) 1552 SB

576 2493 1618 (specify -event [option_argument] to restrict the report to a single event. For example, if the data) 1618 SB

576 2543 1621 (collected was based on branches and branch mispredicts, you may specify -event branches to get) 1621 SB

576 2593 1500 (only the branches portion of the report. You may specify -event multiple times to pick up) 1500 SB

576 2643 269 (multiple events.) 269 SB

32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font9 ANSIFont font

576 2896 358 (Explanations) 358 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 2984 239 (Report Options) 239 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1766 3074 345 (Using IPREDUCE) 345 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (24) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 29 29

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

726 245 275 (s = statistics report) 275 SB

726 286 237 (p = profile report) 237 SB

726 327 135 (sp = both) 135 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 450 249 (Display Options) 249 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 491 143 (-d options) 143 SB

876 491 501 (applies to the statistics report only.) 501 SB

576 573 1486 (Display options are a list of items separated by commas; do not insert a space between display options) 1486 SB

576 655 11 (-) 11 SB

876 655 1317 (removes the item it precedes from the display. You must explicitly remove an item from the ) 1317 SB

876 696 773 (default list if you do not want it included in the display.) 773 SB

576 737 35 (pc) 35 SB

876 737 150 (PC values) 150 SB

576 778 32 (ipl) 32 SB

876 778 153 (IPL values) 153 SB

576 819 27 (m) 27 SB

876 819 98 (modes) 98 SB

576 860 43 (pid) 43 SB

876 860 159 (PID values) 159 SB

576 901 17 (c) 17 SB

876 901 126 (counters) 126 SB

576 942 53 (cpu) 53 SB

876 942 87 (CPUs) 87 SB

576 983 35 (cb) 35 SB

876 983 191 (cache blocks) 191 SB

576 1024 36 (pri) 36 SB

876 1024 98 (priority) 98 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1144 284 (Some examples\226) 284 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 1249 145 (Selection) 145 SB

1026 1249 134 (Displays) 134 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1290 110 (<none>) 110 SB

1026 1290 291 (ipl,mode,pid,ctr,cpu ) 291 SB

1476 1290 119 (\(default\)) 119 SB

576 1331 81 (-d pid) 81 SB

1026 1331 291 (ipl,mode,pid,ctr,cpu ) 291 SB

1476 1331 354 (\(no change from default\)) 354 SB

576 1372 74 (-d pri) 74 SB

1026 1372 336 (ipl,mode,pid,ctr,cpu,pri ) 336 SB

1476 1372 200 (\(adds priority\)) 200 SB

576 1413 199 (-d -ipl,-cpu,pri) 199 SB

1026 1413 224 (mode,pid,ctr,pri) 224 SB

1476 1413 510 (\(removes ipl and cpu; adds priority\)) 510 SB

32 0 0 33 33 0 0 0 31 /Helvetica-Bold /font9 ANSIFont font

576 1495 84 (Note:) 84 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

660 1495 1363 ( Do not insert spaces between display options; separate each display option by a comma only.) 1363 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1624 578 (General information about filters\226) 578 SB

576 1700 255 (-option [range]) 255 SB

876 1700 1310 (range of values separated by colons. Example: -cpu 1:3. Means CPU numbers) 1310 SB

576 1750 202 (1, 2, and 3. ) 202 SB

1026 1750 1017 (The range values are decimal values unless otherwise noted.) 1017 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1855 204 (Counter mask) 204 SB

876 1855 1348 (Binary bit mask used to select the hardware counters that will be included in the reports, if the) 1348 SB

876 1896 1345 (data is present in the collection data file. If you use this switch, a set bit enables the reporting ) 1345 SB

876 1942 991 (of data collected by the corresponding counter. If you do not use the ) 991 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1867 1935 35 (-c) 35 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1902 1942 299 ( switch, IPREDUCE ) 299 SB

876 1985 760 (reports on all counter data found in the collection file.) 760 SB

576 2067 174 (Event name) 174 SB

876 2067 1243 (Selects the events that will be reported. Only one event name per switch invocation is ) 1243 SB

876 2108 1304 (allowed, but you may use the switch multiple times. Any of the event names or nicknames ) 1304 SB

876 2149 1342 (may be used as arguments. Each selected event will be reported in a separate profile report. ) 1342 SB

876 2190 1331 (An event is reported only if the event data is present in the collection file and if the hardware ) 1331 SB

876 2236 829 (counter that collects the event is not masked out with the ) 829 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1705 2229 35 (-c) 35 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

1740 2236 484 ( switch. By default, all event data ) 484 SB

876 2279 469 (in the collection file are reported.) 469 SB

576 2361 116 (PC filter) 116 SB

876 2361 560 (Range values must be in hexadecimal.) 560 SB

576 2443 125 (PID filter) 125 SB

876 2443 1310 (You may specify -pid multiple times with each range you add to a list. For all other options, ) 1310 SB

876 2484 526 (only the last range specified is used.) 526 SB

576 2571 151 (Mode filter) 151 SB

876 2571 1154 (You specify modes as a single, non-separated string of characters. Chose from ) 1154 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

2030 2564 120 (kesuin) 120 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

2150 2571 9 ( ) 9 SB

876 2614 427 (\(order is unimportant\), where:) 427 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1026 2667 578 (kesu = standard OpenVMS modes) 578 SB

1026 2743 206 (i = interrupt) 206 SB

1026 2819 237 (n = idle \(null\)) 237 SB

1026 2895 1024 (Example: Everything but idle would be specified as -m kesui) 1024 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1766 3074 345 (Using IPREDUCE) 345 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (25) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 30 30

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

1026 204 1125 (To determine idle time, you must have collected PS. It is more accurate if you ) 1125 SB

1026 245 1065 (collected priority and PID as well, but IPREDUCE will make an attempt at ) 1065 SB

1026 286 711 (classification even if some information is missing.) 711 SB

576 368 145 (Threshold) 145 SB

876 368 1091 (Data are not printed if the number of filtered samples for the line is less than) 1091 SB

876 409 1194 (the threshold value. The default threshold value is 1; data with 0 references are not) 1194 SB

876 450 108 (printed.) 108 SB

576 532 399 (Beginning time, ending time) 399 SB

1026 532 1095 (Specify times within double quotes and in standard OpenVMS absolute time) 1095 SB

1026 573 92 (format) 92 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1766 3074 345 (Using IPREDUCE) 345 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (26) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%Page: 31 31

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 805 943 (Using MODPME) 943 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1308 632 (Command Syntax) 632 SB

255 255 255 fC

/fm 256 def

1961 3 270 1302 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1299 B

1 F

n

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1424 457 (modpme [-p] [-s command_line]) 457 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 1518 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 1519 697 ( MODPME runs under DEC OSF/1 only.) 697 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1639 414 (Description) 414 SB

255 255 255 fC

/fm 256 def

1961 3 270 1633 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1630 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1767 1640 (Under DEC OSF/1, the modpme command is used with the performance counter evaluation tools) 1640 SB

576 1817 1578 (to synchronize the start of sampling from the counters with the start of the application-under-) 1578 SB

576 1867 1454 (study. This command is used to modify the PME bit setting in the application process.) 1454 SB

576 1943 1583 (When sent, the PME bit allows the hardware performance counters to count events only when) 1583 SB

576 1993 1592 (processes which have their PME bit set are active and in CPU context. This option enables the) 1592 SB

576 2043 1599 (hardware counters to provide accurate data about events occurring when a particular process is) 1599 SB

576 2093 174 (executing.) 174 SB

576 2169 1650 (The modpme command can be invoked in one of two modes, an interactive mode and a command) 1650 SB

576 2219 1617 (line mode. modpme enters the interactive mode if no arguments are given to it on the command) 1617 SB

576 2269 1646 (line. In the interactive mode the user can either view, set, or clear the PME bit of a given process.) 1646 SB

576 2319 1492 (The command line mode allows the setting of the PME bit for a given executable image.) 1492 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 2395 97 (Note:) 97 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

673 2396 1484 ( On DEC OSF/1 V2.0 do not try to do any PME operations on the PID number 0; it will) 1484 SB

576 2446 1598 (crash the system. If this is done on a system running DEC OSF/1 V3.0 or higher with children) 1598 SB

576 2496 1325 (enabled, it will cause all the processes on the system to have their PME bit set.) 1325 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 2616 197 (Flags) 197 SB

255 255 255 fC

/fm 256 def

1961 3 270 2610 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 2607 B

1 F

n

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

576 2744 37 (-p) 37 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

726 2744 1490 (This flag sets the PME bit of the parent process of the modpme command. This is useful) 1490 SB

726 2794 1479 (when running executables from shell scripts. This flag allows you to set the PME bit of ) 1479 SB

726 2844 1477 (the shell script and, from then on, all commands \(children\) executed by the shell script ) 1477 SB

726 2894 1449 (will have their PME bit set. This can also be used when the user wants all commands ) 1449 SB

726 2944 1396 (executed in a particular shell \(window\) to have their PME bit set. In this case, run ) 1396 SB

726 2994 857 (modpme with the -p option in that particular shell.) 857 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1793 3074 318 (Using MODPME) 318 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (27) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Page: 32 32

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 203 34 (-s) 34 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

726 203 1485 (This flag is used to set the PME bit of a given executable image. The name of an image ) 1485 SB

726 253 1496 (has to be given as an argument to modpme after this flag. Further arguments are treated ) 1496 SB

726 303 1495 (as arguments to the given executable. The maximum number of additional arguments is ) 1495 SB

726 353 53 (10.) 53 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 473 594 (Interactive Mode) 594 SB

255 255 255 fC

/fm 256 def

1961 3 270 467 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 464 B

1 F

n

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 601 1497 (In interactive mode, the user is asked a series of questions about the process that is being) 1497 SB

576 651 927 (modified. Below is a example of an interactive session.) 927 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 791 822 (>>>  Do you want to get, set or clear the PME bits\(g/s/c\):) 822 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 844 968 (Specify the operation you want performed on the process.) 968 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

726 908 18 (g) 18 SB

876 908 560 (to get the PME bit of the given process) 560 SB

726 949 17 (s) 17 SB

876 949 559 (to set the PME bit of the given process) 559 SB

726 990 17 (c) 17 SB

876 990 586 (to clear the PME bit of the given process) 586 SB

576 1072 818 (>>>Enter the pid of the process that you wish to monitor:) 818 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1125 1309 (Enter the PID number of the currently active process that you wish to modify.) 1309 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1265 987 (>>>Do you want to monitor the child processes of this process?\(y/n\)) 987 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1318 1552 (Answer y \(yes\) if you want the PME bit set for all currently active children processes for the) 1552 SB

576 1368 1544 (given process. This is useful when setting the PME bit for a process that has been active for) 1544 SB

576 1418 1621 (awhile and has already spawned several child processes. Answer n \(no\) if you do not want to set) 1621 SB

576 1468 1282 (the PME bit for all currently active children processes for the given process.) 1282 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1793 3074 318 (Using MODPME) 318 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (28) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 33 33

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 125 125 0 0 0 116 /Helvetica-Bold /font9 ANSIFont font

0 0 0 fC

276 868 905 (Getting Started) 905 SB

32 0 0 75 75 0 0 0 70 /Helvetica-Bold /font9 ANSIFont font

276 1371 1843 (Example of Analyzing an Application using IPROBE) 1843 SB

255 255 255 fC

/fm 256 def

1961 3 270 1365 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 1362 B

1 F

n

276 1461 626 (under DEC OSF/1) 626 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1589 604 (This is an example of how to count ) 604 SB

1180 1589 78 (PAL) 78 SB

1258 1589 930 (code events on an Alpha system using DEC OSF/1 and) 930 SB

576 1639 1632 (running a transaction processing benchmark that uses Oracle database software. Here, one of the) 1632 SB

576 1689 1570 (server processes on Oracle will be analyzed. Note, we will assume that this process is already) 1570 SB

576 1739 1591 (running on the system and that it would run indefinitely. Thus, we will connect to this process) 1591 SB

576 1789 247 (and analyze it.) 247 SB

576 1865 1503 (Run the database \(server\) and assume that it has multiple processes for each client that is) 1503 SB

576 1915 315 (attached to it. Use ) 315 SB

891 1915 76 (REP) 76 SB

967 1915 1242 ( to get the addresses where this client is loaded. To do this, you would get) 1242 SB

576 1965 759 (the PID of one of the processes and then run ) 759 SB

1335 1965 87 (REP.) 87 SB

1422 1965 668 ( Do this using the root account with the) 668 SB

576 2015 1005 (executable of your process in the current working directory.) 1005 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2155 192 (>> rep -p xxx) 192 SB

1326 2155 320 (\(replace xxx with PID\)) 320 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2284 1550 (This command string creates a file called addresses.resolved, which contains the names and) 1550 SB

576 2334 1369 (addresses for all the procedures in your executable and the kernel. \(Note, use the ) 1369 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1945 2334 37 (-u) 37 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1982 2334 238 ( switch if  you) 238 SB

576 2384 682 (do not want kernel addresses\) Now, run ) 682 SB

1258 2384 147 (IPROBE) 147 SB

1405 2384 743 ( in sampling mode; this will collect samples) 743 SB

576 2434 1607 (about the activity on the system. Because we are looking at a particular application, we will use) 1607 SB

576 2484 1593 (IPROBE's modpme utility to modify the PME setting for the process we are monitoring. To do) 1593 SB

576 2534 1622 (this, get the PID of the process you are monitoring and use this with modpme to set the PME bit) 1622 SB

576 2584 362 (of this active process.) 362 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 2724 173 (>> modpme) 173 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 2853 796 (Now run IPROBE. Note, if you did not use the ) 796 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1372 2853 286 (-mode selected) 286 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1658 2853 528 ( switch, IPROBE will count for) 528 SB

576 2903 1342 (all processes. Here, we will take a sample file of PALcode cycles for 10 seconds) 1342 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (29) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Roman

%%Page: 34 34

%%PageResources: (atend)

SS

0 0 8 8 833 1100 300 SM

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

0 0 0 fC

576 204 1027 (>> iprobe -mode selected -method sample -duration 10 palcode_cycles) 1027 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 333 1638 (This creates an output file called pcsample.dat. Use this file with the IPROBE utility IPREDUCE) 1638 SB

576 383 1387 (to reduce the data to get a profile or statistics report on the process you monitored.) 1387 SB

576 459 251 (So, if you run\226) 251 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 599 221 (>>ipreduce -r p) 221 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 728 1617 (you will get a profile report on the events that happened while sampling. You get the number of) 1617 SB

576 778 1620 (samples obtained in a particular routine in the operating system or in your program. If you want) 1620 SB

576 828 1638 (to further reduce, use IPREDUCE with a particular PC range, i.e., the range can be the addresses) 1638 SB

576 878 1612 (of a particular routine you are interested in. Now you will get a profile report on a per PC basis.) 1612 SB

576 928 1454 (By using dis, the operating system utility that disassembles an object file into machine) 1454 SB

576 978 1610 (instructions, you can correlate this to the source line in you source file. The utility dis gives you) 1610 SB

576 1028 1616 (an offset from the start of a procedure. You can use this to calculate the PC value of your source) 1616 SB

576 1078 1564 (line of interest. On a multiprocessor, you can see things like CPU utilization, events on a per) 1564 SB

576 1128 255 (CPU basis, etc.) 255 SB

576 1204 1552 (IPREDUCE has several filters that provide different views of the data collected by IPROBE.) 1552 SB

576 1254 761 (Other important switches in IPREDUCE are ) 761 SB

32 0 0 42 42 0 0 0 38 /Helvetica /font8 ANSIFont font

1337 1254 60 (-r s) 60 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

1397 1254 712 (, which prints out a statistics report on the) 712 SB

576 1304 227 (IPROBE run.) 227 SB

576 1380 1203 (What follows is an example of using IPROBE on a application process:) 1203 SB

576 1456 1560 (If we have an application program that runs for a finite period of time, you can run REP and) 1560 SB

576 1506 1626 (cause it to run the program-under-test and obtain address data from it. The analysis procedure is) 1626 SB

576 1556 1458 (similar to the previous one; however, in this case the REP command line is as follows:) 1458 SB

32 0 0 33 33 0 0 0 31 /Helvetica /font8 ANSIFont font

576 1696 271 (>> rep ./test_appln) 271 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

576 1825 1613 (where test_appln is the name of the executable the you want to run. Note, the executable should) 1613 SB

576 1875 1625 (be in the current path. This will cause the executable to run, and REP will collect address values) 1625 SB

576 1925 353 (at the end of the run.) 353 SB

576 2001 1137 (We can analyze the application by using IPROBE and IPREDUCE.) 1137 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font25 ANSIFont font

576 2153 108 (Note: ) 108 SB

32 0 0 42 42 0 0 0 38 /Times-Roman /font28 ANSIFont font

684 2154 1533 (REP is not thread safe; this is due to a libxproc not being thread safe. Also, if you specify a) 1533 SB

576 2204 1509 (high frequency count, there is a chance IPROBE may freeze. This is due to a DEC OSF/1) 1509 SB

576 2254 1524 (problem with the lwc thread. To recover from this problem, you need to reboot the system.) 1524 SB

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

276 3074 345 (Guide to IPROBE) 345 SB

621 3074 534 (\226Internal Use Only\226DRAFT) 534 SB

1807 3074 304 (Getting Started) 304 SB

2111 3074 24 (  ) 24 SB

32 0 0 42 42 0 0 0 42 /Symbol font

gs 2156 3249 0 0 CB

2136 3071 20 (\267) 20 SB

gr

gs 2156 3249 0 0 CB

2135 3071 20 (\267) 20 SB

gr

32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font9 ANSIFont font

2156 3074 24 (  ) 24 SB

2180 3074 46 (30) 46 SB

255 255 255 fC

/fm 256 def

1961 3 270 3067 B

1 F

n

0 0 0 fC

/fm 256 def

1961 2 270 3064 B

1 F

n

1 #C

EJ RS

%%PageTrailer

%%PageResources: font Helvetica

%%+ font Helvetica-Bold

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman

%%Trailer

SVDoc restore

end

%%Pages: 34

% TrueType font name key:

%    MSTT31c3d7 = 0c6fDArialF0000003a000002bc0000

%    MSTT31c3e2 = 0c6fDArialF0000003a000002bc0001

%    MSTT31c3ed = 0c6fDArialF00000000000002bc0000

%    MSTT31c3f8 = 0c6fDArialF00000043000002bc0000

%    MSTT31c403 = 0c6fDArialF0000002a000001900000

%    MSTT31c40e = 0c6fDArialF00000021000002bc0000

%    MSTT31c419 = 0c6fDArialF00000021000001900000

%    MSTT31c424 = 0c6fDArialF00000032000002bc0000

%    MSTT31c42f = 0c6fDTimes New RomanF0000002a000001900000

%    MSTT31c43c = 0c6fDArialF0000002a000002bc0000

%    MSTT31c447 = 0c6fDArialF0000004b000002bc0000

%    MSTT31c452 = 0c6fDTimes New RomanF0000002a000002bc0000

%%DocumentSuppliedResources: procset Win35Dict 3 1



%%DocumentNeededResources: font Courier

%%+ font Helvetica

%%+ font Helvetica-Bold

%%+ font Helvetica-BoldOblique

%%+ font Symbol

%%+ font Times-Bold

%%+ font Times-Roman



%%EOF

